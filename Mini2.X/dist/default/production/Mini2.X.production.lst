

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Mar 11 00:32:24 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	psect	text15,local,class=CODE,merge=1,delta=2
    24                           	psect	text16,local,class=CODE,merge=1,delta=2
    25                           	psect	text17,local,class=CODE,merge=1,delta=2
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 2.20
    30                           ; Generated 12/02/2020 GMT
    31                           ; 
    32                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F887 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  000E                     	;# 
    79  000F                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0014                     	;# 
    85  0015                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001D                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  0081                     	;# 
    99  0085                     	;# 
   100  0086                     	;# 
   101  0087                     	;# 
   102  0088                     	;# 
   103  0089                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  008F                     	;# 
   108  0090                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0094                     	;# 
   115  0095                     	;# 
   116  0096                     	;# 
   117  0097                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  0105                     	;# 
   127  0107                     	;# 
   128  0108                     	;# 
   129  0109                     	;# 
   130  010C                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  010F                     	;# 
   135  0185                     	;# 
   136  0187                     	;# 
   137  0188                     	;# 
   138  0189                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  0000                     	;# 
   142  0001                     	;# 
   143  0002                     	;# 
   144  0003                     	;# 
   145  0004                     	;# 
   146  0005                     	;# 
   147  0006                     	;# 
   148  0007                     	;# 
   149  0008                     	;# 
   150  0009                     	;# 
   151  000A                     	;# 
   152  000B                     	;# 
   153  000C                     	;# 
   154  000D                     	;# 
   155  000E                     	;# 
   156  000E                     	;# 
   157  000F                     	;# 
   158  0010                     	;# 
   159  0011                     	;# 
   160  0012                     	;# 
   161  0013                     	;# 
   162  0014                     	;# 
   163  0015                     	;# 
   164  0015                     	;# 
   165  0016                     	;# 
   166  0017                     	;# 
   167  0018                     	;# 
   168  0019                     	;# 
   169  001A                     	;# 
   170  001B                     	;# 
   171  001B                     	;# 
   172  001C                     	;# 
   173  001D                     	;# 
   174  001E                     	;# 
   175  001F                     	;# 
   176  0081                     	;# 
   177  0085                     	;# 
   178  0086                     	;# 
   179  0087                     	;# 
   180  0088                     	;# 
   181  0089                     	;# 
   182  008C                     	;# 
   183  008D                     	;# 
   184  008E                     	;# 
   185  008F                     	;# 
   186  0090                     	;# 
   187  0091                     	;# 
   188  0092                     	;# 
   189  0093                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0094                     	;# 
   193  0095                     	;# 
   194  0096                     	;# 
   195  0097                     	;# 
   196  0098                     	;# 
   197  0099                     	;# 
   198  009A                     	;# 
   199  009B                     	;# 
   200  009C                     	;# 
   201  009D                     	;# 
   202  009E                     	;# 
   203  009F                     	;# 
   204  0105                     	;# 
   205  0107                     	;# 
   206  0108                     	;# 
   207  0109                     	;# 
   208  010C                     	;# 
   209  010C                     	;# 
   210  010D                     	;# 
   211  010E                     	;# 
   212  010F                     	;# 
   213  0185                     	;# 
   214  0187                     	;# 
   215  0188                     	;# 
   216  0189                     	;# 
   217  018C                     	;# 
   218  018D                     	;# 
   219  0000                     	;# 
   220  0001                     	;# 
   221  0002                     	;# 
   222  0003                     	;# 
   223  0004                     	;# 
   224  0005                     	;# 
   225  0006                     	;# 
   226  0007                     	;# 
   227  0008                     	;# 
   228  0009                     	;# 
   229  000A                     	;# 
   230  000B                     	;# 
   231  000C                     	;# 
   232  000D                     	;# 
   233  000E                     	;# 
   234  000E                     	;# 
   235  000F                     	;# 
   236  0010                     	;# 
   237  0011                     	;# 
   238  0012                     	;# 
   239  0013                     	;# 
   240  0014                     	;# 
   241  0015                     	;# 
   242  0015                     	;# 
   243  0016                     	;# 
   244  0017                     	;# 
   245  0018                     	;# 
   246  0019                     	;# 
   247  001A                     	;# 
   248  001B                     	;# 
   249  001B                     	;# 
   250  001C                     	;# 
   251  001D                     	;# 
   252  001E                     	;# 
   253  001F                     	;# 
   254  0081                     	;# 
   255  0085                     	;# 
   256  0086                     	;# 
   257  0087                     	;# 
   258  0088                     	;# 
   259  0089                     	;# 
   260  008C                     	;# 
   261  008D                     	;# 
   262  008E                     	;# 
   263  008F                     	;# 
   264  0090                     	;# 
   265  0091                     	;# 
   266  0092                     	;# 
   267  0093                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0094                     	;# 
   271  0095                     	;# 
   272  0096                     	;# 
   273  0097                     	;# 
   274  0098                     	;# 
   275  0099                     	;# 
   276  009A                     	;# 
   277  009B                     	;# 
   278  009C                     	;# 
   279  009D                     	;# 
   280  009E                     	;# 
   281  009F                     	;# 
   282  0105                     	;# 
   283  0107                     	;# 
   284  0108                     	;# 
   285  0109                     	;# 
   286  010C                     	;# 
   287  010C                     	;# 
   288  010D                     	;# 
   289  010E                     	;# 
   290  010F                     	;# 
   291  0185                     	;# 
   292  0187                     	;# 
   293  0188                     	;# 
   294  0189                     	;# 
   295  018C                     	;# 
   296  018D                     	;# 
   297  0000                     	;# 
   298  0001                     	;# 
   299  0002                     	;# 
   300  0003                     	;# 
   301  0004                     	;# 
   302  0005                     	;# 
   303  0006                     	;# 
   304  0007                     	;# 
   305  0008                     	;# 
   306  0009                     	;# 
   307  000A                     	;# 
   308  000B                     	;# 
   309  000C                     	;# 
   310  000D                     	;# 
   311  000E                     	;# 
   312  000E                     	;# 
   313  000F                     	;# 
   314  0010                     	;# 
   315  0011                     	;# 
   316  0012                     	;# 
   317  0013                     	;# 
   318  0014                     	;# 
   319  0015                     	;# 
   320  0015                     	;# 
   321  0016                     	;# 
   322  0017                     	;# 
   323  0018                     	;# 
   324  0019                     	;# 
   325  001A                     	;# 
   326  001B                     	;# 
   327  001B                     	;# 
   328  001C                     	;# 
   329  001D                     	;# 
   330  001E                     	;# 
   331  001F                     	;# 
   332  0081                     	;# 
   333  0085                     	;# 
   334  0086                     	;# 
   335  0087                     	;# 
   336  0088                     	;# 
   337  0089                     	;# 
   338  008C                     	;# 
   339  008D                     	;# 
   340  008E                     	;# 
   341  008F                     	;# 
   342  0090                     	;# 
   343  0091                     	;# 
   344  0092                     	;# 
   345  0093                     	;# 
   346  0093                     	;# 
   347  0093                     	;# 
   348  0094                     	;# 
   349  0095                     	;# 
   350  0096                     	;# 
   351  0097                     	;# 
   352  0098                     	;# 
   353  0099                     	;# 
   354  009A                     	;# 
   355  009B                     	;# 
   356  009C                     	;# 
   357  009D                     	;# 
   358  009E                     	;# 
   359  009F                     	;# 
   360  0105                     	;# 
   361  0107                     	;# 
   362  0108                     	;# 
   363  0109                     	;# 
   364  010C                     	;# 
   365  010C                     	;# 
   366  010D                     	;# 
   367  010E                     	;# 
   368  010F                     	;# 
   369  0185                     	;# 
   370  0187                     	;# 
   371  0188                     	;# 
   372  0189                     	;# 
   373  018C                     	;# 
   374  018D                     	;# 
   375  0000                     	;# 
   376  0001                     	;# 
   377  0002                     	;# 
   378  0003                     	;# 
   379  0004                     	;# 
   380  0005                     	;# 
   381  0006                     	;# 
   382  0007                     	;# 
   383  0008                     	;# 
   384  0009                     	;# 
   385  000A                     	;# 
   386  000B                     	;# 
   387  000C                     	;# 
   388  000D                     	;# 
   389  000E                     	;# 
   390  000E                     	;# 
   391  000F                     	;# 
   392  0010                     	;# 
   393  0011                     	;# 
   394  0012                     	;# 
   395  0013                     	;# 
   396  0014                     	;# 
   397  0015                     	;# 
   398  0015                     	;# 
   399  0016                     	;# 
   400  0017                     	;# 
   401  0018                     	;# 
   402  0019                     	;# 
   403  001A                     	;# 
   404  001B                     	;# 
   405  001B                     	;# 
   406  001C                     	;# 
   407  001D                     	;# 
   408  001E                     	;# 
   409  001F                     	;# 
   410  0081                     	;# 
   411  0085                     	;# 
   412  0086                     	;# 
   413  0087                     	;# 
   414  0088                     	;# 
   415  0089                     	;# 
   416  008C                     	;# 
   417  008D                     	;# 
   418  008E                     	;# 
   419  008F                     	;# 
   420  0090                     	;# 
   421  0091                     	;# 
   422  0092                     	;# 
   423  0093                     	;# 
   424  0093                     	;# 
   425  0093                     	;# 
   426  0094                     	;# 
   427  0095                     	;# 
   428  0096                     	;# 
   429  0097                     	;# 
   430  0098                     	;# 
   431  0099                     	;# 
   432  009A                     	;# 
   433  009B                     	;# 
   434  009C                     	;# 
   435  009D                     	;# 
   436  009E                     	;# 
   437  009F                     	;# 
   438  0105                     	;# 
   439  0107                     	;# 
   440  0108                     	;# 
   441  0109                     	;# 
   442  010C                     	;# 
   443  010C                     	;# 
   444  010D                     	;# 
   445  010E                     	;# 
   446  010F                     	;# 
   447  0185                     	;# 
   448  0187                     	;# 
   449  0188                     	;# 
   450  0189                     	;# 
   451  018C                     	;# 
   452  018D                     	;# 
   453                           
   454                           	psect	strings
   455  0003                     __pstrings:
   456  0003                     stringtab:
   457  0003                     __stringtab:
   458  0003                     stringcode:	
   459                           ;	String table - string pointers are 1 byte each
   460                           
   461  0003                     stringdir:
   462  0003  3000               	movlw	high stringdir
   463  0004  008A               	movwf	10
   464  0005  0804               	movf	4,w
   465  0006  0A84               	incf	4,f
   466  0007  0782               	addwf	2,f
   467  0008                     __stringbase:
   468  0008  3400               	retlw	0
   469  0009                     __end_of__stringtab:
   470  0009                     _dpowers:
   471  0009  3401               	retlw	1
   472  000A  3400               	retlw	0
   473  000B  340A               	retlw	10
   474  000C  3400               	retlw	0
   475  000D  3464               	retlw	100
   476  000E  3400               	retlw	0
   477  000F  34E8               	retlw	232
   478  0010  3403               	retlw	3
   479  0011  3410               	retlw	16
   480  0012  3427               	retlw	39
   481  0013                     __end_of_dpowers:
   482  0006                     _PORTB	set	6
   483  0013                     _SSPBUF	set	19
   484  0014                     _SSPCON	set	20
   485  0019                     _TXREG	set	25
   486  0063                     _SSPIF	set	99
   487  00C7                     _SPEN	set	199
   488  0093                     _SSPADD	set	147
   489  0094                     _SSPSTAT	set	148
   490  0091                     _SSPCON2	set	145
   491  0099                     _SPBRG	set	153
   492  0086                     _TRISB	set	134
   493  04A0                     _BF	set	1184
   494  048B                     _RCEN	set	1163
   495  048E                     _ACKSTAT	set	1166
   496  048C                     _ACKEN	set	1164
   497  048D                     _ACKDT	set	1165
   498  048A                     _PEN	set	1162
   499  0489                     _RSEN	set	1161
   500  0488                     _SEN	set	1160
   501  043C                     _TRISC4	set	1084
   502  043B                     _TRISC3	set	1083
   503  04C1                     _TRMT	set	1217
   504  04C5                     _TXEN	set	1221
   505  043F                     _TRISC7	set	1087
   506  043E                     _TRISC6	set	1086
   507  04C4                     _SYNC	set	1220
   508  04C2                     _BRGH	set	1218
   509  0189                     _ANSELH	set	393
   510  0013                     STR_5:
   511  0013  3420               	retlw	32	;' '
   512  0014  3447               	retlw	71	;'G'
   513  0015  3478               	retlw	120	;'x'
   514  0016  3420               	retlw	32	;' '
   515  0017  343D               	retlw	61	;'='
   516  0018  3420               	retlw	32	;' '
   517  0019  3425               	retlw	37	;'%'
   518  001A  3464               	retlw	100	;'d'
   519  001B  3420               	retlw	32	;' '
   520  001C  3420               	retlw	32	;' '
   521  001D  3420               	retlw	32	;' '
   522  001E  3420               	retlw	32	;' '
   523  001F  3400               	retlw	0
   524  0020                     STR_2:
   525  0020  3420               	retlw	32	;' '
   526  0021  3441               	retlw	65	;'A'
   527  0022  3479               	retlw	121	;'y'
   528  0023  3420               	retlw	32	;' '
   529  0024  343D               	retlw	61	;'='
   530  0025  3420               	retlw	32	;' '
   531  0026  3425               	retlw	37	;'%'
   532  0027  3464               	retlw	100	;'d'
   533  0028  3420               	retlw	32	;' '
   534  0029  3420               	retlw	32	;' '
   535  002A  3420               	retlw	32	;' '
   536  002B  3420               	retlw	32	;' '
   537  002C  3400               	retlw	0
   538  002D                     STR_6:
   539  002D  3420               	retlw	32	;' '
   540  002E  3447               	retlw	71	;'G'
   541  002F  3479               	retlw	121	;'y'
   542  0030  3420               	retlw	32	;' '
   543  0031  343D               	retlw	61	;'='
   544  0032  3420               	retlw	32	;' '
   545  0033  3425               	retlw	37	;'%'
   546  0034  3464               	retlw	100	;'d'
   547  0035  3420               	retlw	32	;' '
   548  0036  3420               	retlw	32	;' '
   549  0037  3420               	retlw	32	;' '
   550  0038  3420               	retlw	32	;' '
   551  0039  3400               	retlw	0
   552  003A                     STR_3:
   553  003A  3420               	retlw	32	;' '
   554  003B  3441               	retlw	65	;'A'
   555  003C  347A               	retlw	122	;'z'
   556  003D  3420               	retlw	32	;' '
   557  003E  343D               	retlw	61	;'='
   558  003F  3420               	retlw	32	;' '
   559  0040  3425               	retlw	37	;'%'
   560  0041  3464               	retlw	100	;'d'
   561  0042  3420               	retlw	32	;' '
   562  0043  3420               	retlw	32	;' '
   563  0044  3420               	retlw	32	;' '
   564  0045  3420               	retlw	32	;' '
   565  0046  3400               	retlw	0
   566  0047                     STR_1:
   567  0047  3441               	retlw	65	;'A'
   568  0048  3478               	retlw	120	;'x'
   569  0049  3420               	retlw	32	;' '
   570  004A  343D               	retlw	61	;'='
   571  004B  3420               	retlw	32	;' '
   572  004C  3425               	retlw	37	;'%'
   573  004D  3464               	retlw	100	;'d'
   574  004E  3420               	retlw	32	;' '
   575  004F  3420               	retlw	32	;' '
   576  0050  3420               	retlw	32	;' '
   577  0051  3420               	retlw	32	;' '
   578  0052  3400               	retlw	0
   579  0053                     STR_7:
   580  0053  3420               	retlw	32	;' '
   581  0054  3447               	retlw	71	;'G'
   582  0055  347A               	retlw	122	;'z'
   583  0056  3420               	retlw	32	;' '
   584  0057  343D               	retlw	61	;'='
   585  0058  3420               	retlw	32	;' '
   586  0059  3425               	retlw	37	;'%'
   587  005A  3464               	retlw	100	;'d'
   588  005B  340D               	retlw	13
   589  005C  340A               	retlw	10
   590  005D  3400               	retlw	0
   591  005E                     STR_4:
   592  005E  3420               	retlw	32	;' '
   593  005F  3454               	retlw	84	;'T'
   594  0060  3420               	retlw	32	;' '
   595  0061  343D               	retlw	61	;'='
   596  0062  3420               	retlw	32	;' '
   597  0063  3425               	retlw	37	;'%'
   598  0064  3464               	retlw	100	;'d'
   599  0065  3420               	retlw	32	;' '
   600  0066  3420               	retlw	32	;' '
   601  0067  3400               	retlw	0
   602                           
   603                           	psect	cinit
   604  07FC                     start_initialization:	
   605                           ; #config settings
   606                           
   607  07FC                     __initialization:
   608  07FC                     end_of_initialization:	
   609                           ;End of C runtime variable initialization code
   610                           
   611  07FC                     __end_of__initialization:
   612  07FC  0183               	clrf	3
   613  07FD  120A  118A  2BB1   	ljmp	_main	;jump to C main() function
   614                           
   615                           	psect	cstackCOMMON
   616  0070                     __pcstackCOMMON:
   617  0070                     ?_UART_TX_Init:
   618  0070                     ??_UART_TX_Init:	
   619                           ; 1 bytes @ 0x0
   620                           
   621  0070                     ?_MPU6050_Init:	
   622                           ; 1 bytes @ 0x0
   623                           
   624  0070                     ?_MPU6050_Read:	
   625                           ; 1 bytes @ 0x0
   626                           
   627  0070                     ?_I2C_Master_Write:	
   628                           ; 1 bytes @ 0x0
   629                           
   630  0070                     ??_I2C_Master_Write:	
   631                           ; 1 bytes @ 0x0
   632                           
   633  0070                     ?_main:	
   634                           ; 1 bytes @ 0x0
   635                           
   636  0070                     ?_UART_Write:	
   637                           ; 1 bytes @ 0x0
   638                           
   639  0070                     ??_UART_Write:	
   640                           ; 1 bytes @ 0x0
   641                           
   642  0070                     ?_UART_Write_String:	
   643                           ; 1 bytes @ 0x0
   644                           
   645  0070                     ?_I2C_Master_Init:	
   646                           ; 1 bytes @ 0x0
   647                           
   648  0070                     ??_I2C_Master_Init:	
   649                           ; 1 bytes @ 0x0
   650                           
   651  0070                     ?_I2C_Master_Wait:	
   652                           ; 1 bytes @ 0x0
   653                           
   654  0070                     ??_I2C_Master_Wait:	
   655                           ; 1 bytes @ 0x0
   656                           
   657  0070                     ?_I2C_Start:	
   658                           ; 1 bytes @ 0x0
   659                           
   660  0070                     ?_I2C_Master_Stop:	
   661                           ; 1 bytes @ 0x0
   662                           
   663  0070                     ??_I2C_Master_Stop:	
   664                           ; 1 bytes @ 0x0
   665                           
   666  0070                     ?_I2C_ACK:	
   667                           ; 1 bytes @ 0x0
   668                           
   669  0070                     ??_I2C_ACK:	
   670                           ; 1 bytes @ 0x0
   671                           
   672  0070                     ?_I2C_NACK:	
   673                           ; 1 bytes @ 0x0
   674                           
   675  0070                     ??_I2C_NACK:	
   676                           ; 1 bytes @ 0x0
   677                           
   678  0070                     ?_I2C_Read:	
   679                           ; 1 bytes @ 0x0
   680                           
   681  0070                     ??_I2C_Read:	
   682                           ; 1 bytes @ 0x0
   683                           
   684  0070                     ?___awdiv:	
   685                           ; 1 bytes @ 0x0
   686                           
   687  0070                     ?___lwdiv:	
   688                           ; 2 bytes @ 0x0
   689                           
   690  0070                     UART_Write@data:	
   691                           ; 2 bytes @ 0x0
   692                           
   693  0070                     I2C_Master_Write@data:	
   694                           ; 1 bytes @ 0x0
   695                           
   696  0070                     ___awdiv@divisor:	
   697                           ; 1 bytes @ 0x0
   698                           
   699  0070                     ___lwdiv@divisor:	
   700                           ; 2 bytes @ 0x0
   701                           
   702                           
   703                           ; 2 bytes @ 0x0
   704  0070                     	ds	1
   705  0071                     ??_UART_Write_String:
   706  0071                     ??_I2C_Start:	
   707                           ; 1 bytes @ 0x1
   708                           
   709  0071                     I2C_Start@add:	
   710                           ; 1 bytes @ 0x1
   711                           
   712  0071                     I2C_Read@ACK_NACK:	
   713                           ; 1 bytes @ 0x1
   714                           
   715                           
   716                           ; 1 bytes @ 0x1
   717  0071                     	ds	1
   718  0072                     ??_MPU6050_Init:
   719  0072                     I2C_Read@Data:	
   720                           ; 1 bytes @ 0x2
   721                           
   722  0072                     UART_Write_String@i:	
   723                           ; 1 bytes @ 0x2
   724                           
   725  0072                     ___awdiv@dividend:	
   726                           ; 2 bytes @ 0x2
   727                           
   728  0072                     ___lwdiv@dividend:	
   729                           ; 2 bytes @ 0x2
   730                           
   731                           
   732                           ; 2 bytes @ 0x2
   733  0072                     	ds	2
   734  0074                     ??___awdiv:
   735  0074                     ??___lwdiv:	
   736                           ; 1 bytes @ 0x4
   737                           
   738  0074                     UART_Write_String@buf:	
   739                           ; 1 bytes @ 0x4
   740                           
   741                           
   742                           ; 1 bytes @ 0x4
   743  0074                     	ds	1
   744  0075                     ___awdiv@counter:
   745  0075                     ___lwdiv@quotient:	
   746                           ; 1 bytes @ 0x5
   747                           
   748                           
   749                           ; 2 bytes @ 0x5
   750  0075                     	ds	1
   751  0076                     ___awdiv@sign:
   752                           
   753                           ; 1 bytes @ 0x6
   754  0076                     	ds	1
   755  0077                     ___lwdiv@counter:
   756  0077                     ___awdiv@quotient:	
   757                           ; 1 bytes @ 0x7
   758                           
   759                           
   760                           ; 2 bytes @ 0x7
   761  0077                     	ds	1
   762  0078                     ?___lwmod:
   763  0078                     ___lwmod@divisor:	
   764                           ; 2 bytes @ 0x8
   765                           
   766                           
   767                           ; 2 bytes @ 0x8
   768  0078                     	ds	2
   769  007A                     ___lwmod@dividend:
   770                           
   771                           ; 2 bytes @ 0xA
   772  007A                     	ds	2
   773  007C                     ??___lwmod:
   774                           
   775                           ; 1 bytes @ 0xC
   776  007C                     	ds	1
   777  007D                     ___lwmod@counter:
   778                           
   779                           ; 1 bytes @ 0xD
   780  007D                     	ds	1
   781                           
   782                           	psect	cstackBANK0
   783  0020                     __pcstackBANK0:
   784  0020                     ?_sprintf:
   785  0020                     sprintf@f:	
   786                           ; 2 bytes @ 0x0
   787                           
   788                           
   789                           ; 1 bytes @ 0x0
   790  0020                     	ds	3
   791  0023                     ??_sprintf:
   792                           
   793                           ; 1 bytes @ 0x3
   794  0023                     	ds	3
   795  0026                     sprintf@ap:
   796                           
   797                           ; 1 bytes @ 0x6
   798  0026                     	ds	1
   799  0027                     sprintf@flag:
   800                           
   801                           ; 1 bytes @ 0x7
   802  0027                     	ds	1
   803  0028                     sprintf@prec:
   804                           
   805                           ; 1 bytes @ 0x8
   806  0028                     	ds	1
   807  0029                     sprintf@val:
   808                           
   809                           ; 2 bytes @ 0x9
   810  0029                     	ds	2
   811  002B                     sprintf@sp:
   812                           
   813                           ; 1 bytes @ 0xB
   814  002B                     	ds	1
   815  002C                     sprintf@c:
   816                           
   817                           ; 1 bytes @ 0xC
   818  002C                     	ds	1
   819  002D                     ??_MPU6050_Read:
   820                           
   821                           ; 1 bytes @ 0xD
   822  002D                     	ds	4
   823  0031                     MPU6050_Read@buffer:
   824                           
   825                           ; 40 bytes @ 0x11
   826  0031                     	ds	40
   827  0059                     MPU6050_Read@Ax:
   828                           
   829                           ; 2 bytes @ 0x39
   830  0059                     	ds	2
   831  005B                     MPU6050_Read@Az:
   832                           
   833                           ; 2 bytes @ 0x3B
   834  005B                     	ds	2
   835  005D                     MPU6050_Read@T:
   836                           
   837                           ; 2 bytes @ 0x3D
   838  005D                     	ds	2
   839  005F                     MPU6050_Read@Gx:
   840                           
   841                           ; 2 bytes @ 0x3F
   842  005F                     	ds	2
   843  0061                     MPU6050_Read@Gy:
   844                           
   845                           ; 2 bytes @ 0x41
   846  0061                     	ds	2
   847  0063                     MPU6050_Read@Gz:
   848                           
   849                           ; 2 bytes @ 0x43
   850  0063                     	ds	2
   851  0065                     MPU6050_Read@Ay:
   852                           
   853                           ; 2 bytes @ 0x45
   854  0065                     	ds	2
   855  0067                     ??_main:
   856                           
   857                           ; 1 bytes @ 0x47
   858  0067                     	ds	2
   859                           
   860                           	psect	maintext
   861  03B1                     __pmaintext:	
   862 ;;
   863 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   864 ;;
   865 ;; *************** function _main *****************
   866 ;; Defined at:
   867 ;;		line 23 in file "Mini2 main.c"
   868 ;; Parameters:    Size  Location     Type
   869 ;;		None
   870 ;; Auto vars:     Size  Location     Type
   871 ;;		None
   872 ;; Return value:  Size  Location     Type
   873 ;;                  1    wreg      void 
   874 ;; Registers used:
   875 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   876 ;; Tracked objects:
   877 ;;		On entry : B00/0
   878 ;;		On exit  : 0/0
   879 ;;		Unchanged: 0/0
   880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   881 ;;      Params:         0       0       0       0       0
   882 ;;      Locals:         0       0       0       0       0
   883 ;;      Temps:          0       2       0       0       0
   884 ;;      Totals:         0       2       0       0       0
   885 ;;Total ram usage:        2 bytes
   886 ;; Hardware stack levels required when called:    4
   887 ;; This function calls:
   888 ;;		_MPU6050_Init
   889 ;;		_MPU6050_Read
   890 ;;		_UART_TX_Init
   891 ;; This function is called by:
   892 ;;		Startup code after reset
   893 ;; This function uses a non-reentrant model
   894 ;;
   895                           
   896                           
   897                           ;psect for function _main
   898  03B1                     _main:
   899  03B1                     l1439:	
   900                           ;incstack = 0
   901                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   902                           
   903                           
   904                           ;Mini2 main.c: 25:     UART_TX_Init();
   905  03B1  120A  118A  2361  120A  118A  	fcall	_UART_TX_Init
   906  03B6                     l1441:
   907                           
   908                           ;Mini2 main.c: 26:     ANSELH = 0;
   909  03B6  1683               	bsf	3,5	;RP0=1, select bank3
   910  03B7  1703               	bsf	3,6	;RP1=1, select bank3
   911  03B8  0189               	clrf	9	;volatile
   912  03B9                     l1443:
   913                           
   914                           ;Mini2 main.c: 27:     TRISB = 0;
   915  03B9  1683               	bsf	3,5	;RP0=1, select bank1
   916  03BA  1303               	bcf	3,6	;RP1=0, select bank1
   917  03BB  0186               	clrf	6	;volatile
   918                           
   919                           ;Mini2 main.c: 28:     MPU6050_Init();
   920  03BC  120A  118A  24E0  120A  118A  	fcall	_MPU6050_Init
   921  03C1                     l1445:
   922                           
   923                           ;Mini2 main.c: 30:  {;Mini2 main.c: 31:      MPU6050_Read();
   924  03C1  120A  118A  2665  120A  118A  	fcall	_MPU6050_Read
   925  03C6                     l1447:
   926                           
   927                           ;Mini2 main.c: 32:         _delay((unsigned long)((50)*(8000000/4000.0)));
   928  03C6  3082               	movlw	130
   929  03C7  1283               	bcf	3,5	;RP0=0, select bank0
   930  03C8  1303               	bcf	3,6	;RP1=0, select bank0
   931  03C9  00E8               	movwf	??_main+1
   932  03CA  30DD               	movlw	221
   933  03CB  00E7               	movwf	??_main
   934  03CC                     u837:
   935  03CC  0BE7               	decfsz	??_main,f
   936  03CD  2BCC               	goto	u837
   937  03CE  0BE8               	decfsz	??_main+1,f
   938  03CF  2BCC               	goto	u837
   939  03D0  2BC1               	goto	l1445
   940  03D1  120A  118A  2800   	ljmp	start
   941  03D4                     __end_of_main:
   942                           
   943                           	psect	text1
   944  0361                     __ptext1:	
   945 ;; *************** function _UART_TX_Init *****************
   946 ;; Defined at:
   947 ;;		line 9 in file "USART.c"
   948 ;; Parameters:    Size  Location     Type
   949 ;;		None
   950 ;; Auto vars:     Size  Location     Type
   951 ;;		None
   952 ;; Return value:  Size  Location     Type
   953 ;;                  1    wreg      void 
   954 ;; Registers used:
   955 ;;		wreg
   956 ;; Tracked objects:
   957 ;;		On entry : 0/0
   958 ;;		On exit  : 0/0
   959 ;;		Unchanged: 0/0
   960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   961 ;;      Params:         0       0       0       0       0
   962 ;;      Locals:         0       0       0       0       0
   963 ;;      Temps:          0       0       0       0       0
   964 ;;      Totals:         0       0       0       0       0
   965 ;;Total ram usage:        0 bytes
   966 ;; Hardware stack levels used:    1
   967 ;; This function calls:
   968 ;;		Nothing
   969 ;; This function is called by:
   970 ;;		_main
   971 ;; This function uses a non-reentrant model
   972 ;;
   973                           
   974                           
   975                           ;psect for function _UART_TX_Init
   976  0361                     _UART_TX_Init:
   977  0361                     l997:	
   978                           ;incstack = 0
   979                           ; Regs used in _UART_TX_Init: [wreg]
   980                           
   981                           
   982                           ;USART.c: 11:   BRGH = 1;
   983  0361  1683               	bsf	3,5	;RP0=1, select bank1
   984  0362  1303               	bcf	3,6	;RP1=0, select bank1
   985  0363  1518               	bsf	24,2	;volatile
   986  0364                     l999:
   987                           
   988                           ;USART.c: 12:   SPBRG = 51;
   989  0364  3033               	movlw	51
   990  0365  0099               	movwf	25	;volatile
   991  0366                     l1001:
   992                           
   993                           ;USART.c: 14:   SYNC = 0;
   994  0366  1218               	bcf	24,4	;volatile
   995  0367                     l1003:
   996                           
   997                           ;USART.c: 15:   SPEN = 1;
   998  0367  1283               	bcf	3,5	;RP0=0, select bank0
   999  0368  1303               	bcf	3,6	;RP1=0, select bank0
  1000  0369  1798               	bsf	24,7	;volatile
  1001  036A                     l1005:
  1002                           
  1003                           ;USART.c: 17:   TRISC6 = 1;
  1004  036A  1683               	bsf	3,5	;RP0=1, select bank1
  1005  036B  1303               	bcf	3,6	;RP1=0, select bank1
  1006  036C  1707               	bsf	7,6	;volatile
  1007  036D                     l1007:
  1008                           
  1009                           ;USART.c: 18:   TRISC7 = 1;
  1010  036D  1787               	bsf	7,7	;volatile
  1011  036E                     l1009:
  1012                           
  1013                           ;USART.c: 19:   TXEN = 1;
  1014  036E  1698               	bsf	24,5	;volatile
  1015  036F                     l41:
  1016  036F  0008               	return
  1017  0370                     __end_of_UART_TX_Init:
  1018                           
  1019                           	psect	text2
  1020  0665                     __ptext2:	
  1021 ;; *************** function _MPU6050_Read *****************
  1022 ;; Defined at:
  1023 ;;		line 54 in file "MPU6050.c"
  1024 ;; Parameters:    Size  Location     Type
  1025 ;;		None
  1026 ;; Auto vars:     Size  Location     Type
  1027 ;;  buffer         40   17[BANK0 ] unsigned char [40]
  1028 ;;  Ay              2   69[BANK0 ] int 
  1029 ;;  Gz              2   67[BANK0 ] int 
  1030 ;;  Gy              2   65[BANK0 ] int 
  1031 ;;  Gx              2   63[BANK0 ] int 
  1032 ;;  T               2   61[BANK0 ] int 
  1033 ;;  Az              2   59[BANK0 ] int 
  1034 ;;  Ax              2   57[BANK0 ] int 
  1035 ;; Return value:  Size  Location     Type
  1036 ;;                  1    wreg      void 
  1037 ;; Registers used:
  1038 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1039 ;; Tracked objects:
  1040 ;;		On entry : 0/0
  1041 ;;		On exit  : 0/0
  1042 ;;		Unchanged: 0/0
  1043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1044 ;;      Params:         0       0       0       0       0
  1045 ;;      Locals:         0      54       0       0       0
  1046 ;;      Temps:          0       4       0       0       0
  1047 ;;      Totals:         0      58       0       0       0
  1048 ;;Total ram usage:       58 bytes
  1049 ;; Hardware stack levels used:    1
  1050 ;; Hardware stack levels required when called:    3
  1051 ;; This function calls:
  1052 ;;		_I2C_Master_Stop
  1053 ;;		_I2C_Master_Write
  1054 ;;		_I2C_Read
  1055 ;;		_I2C_Start
  1056 ;;		_UART_Write_String
  1057 ;;		___awdiv
  1058 ;;		_sprintf
  1059 ;; This function is called by:
  1060 ;;		_main
  1061 ;; This function uses a non-reentrant model
  1062 ;;
  1063                           
  1064                           
  1065                           ;psect for function _MPU6050_Read
  1066  0665                     _MPU6050_Read:
  1067  0665                     l1401:	
  1068                           ;incstack = 0
  1069                           ; Regs used in _MPU6050_Read: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1070                           
  1071                           
  1072                           ;MPU6050.c: 56:   char buffer[40];;MPU6050.c: 57:   int Ax,Ay,Az,T,Gx,Gy,Gz;;MPU6050.c: 
      +                          59:   I2C_Start(0xD0);
  1073  0665  30D0               	movlw	208
  1074  0666  120A  118A  2380  120A  118A  	fcall	_I2C_Start
  1075                           
  1076                           ;MPU6050.c: 60:   I2C_Master_Write(0x3B);
  1077  066B  303B               	movlw	59
  1078  066C  120A  118A  2370  120A  118A  	fcall	_I2C_Master_Write
  1079                           
  1080                           ;MPU6050.c: 61:   I2C_Master_Stop();
  1081  0671  120A  118A  2320  120A  118A  	fcall	_I2C_Master_Stop
  1082                           
  1083                           ;MPU6050.c: 62:   I2C_Start(0xD1);
  1084  0676  30D1               	movlw	209
  1085  0677  120A  118A  2380  120A  118A  	fcall	_I2C_Start
  1086  067C                     l1403:
  1087                           
  1088                           ;MPU6050.c: 63:   Ax = ((int)I2C_Read(0)<<8) | (int)I2C_Read(0);
  1089  067C  3000               	movlw	0
  1090  067D  120A  118A  23D4  120A  118A  	fcall	_I2C_Read
  1091  0682  1283               	bcf	3,5	;RP0=0, select bank0
  1092  0683  1303               	bcf	3,6	;RP1=0, select bank0
  1093  0684  00AD               	movwf	??_MPU6050_Read
  1094  0685  01AE               	clrf	??_MPU6050_Read+1
  1095  0686  3000               	movlw	0
  1096  0687  120A  118A  23D4  120A  118A  	fcall	_I2C_Read
  1097  068C  1283               	bcf	3,5	;RP0=0, select bank0
  1098  068D  1303               	bcf	3,6	;RP1=0, select bank0
  1099  068E  00AF               	movwf	??_MPU6050_Read+2
  1100  068F  01B0               	clrf	??_MPU6050_Read+3
  1101  0690  082F               	movf	??_MPU6050_Read+2,w
  1102  0691  00B0               	movwf	??_MPU6050_Read+3
  1103  0692  01AF               	clrf	??_MPU6050_Read+2
  1104  0693  082D               	movf	??_MPU6050_Read,w
  1105  0694  042F               	iorwf	??_MPU6050_Read+2,w
  1106  0695  00D9               	movwf	MPU6050_Read@Ax
  1107  0696  082E               	movf	??_MPU6050_Read+1,w
  1108  0697  0430               	iorwf	??_MPU6050_Read+3,w
  1109  0698  00DA               	movwf	MPU6050_Read@Ax+1
  1110  0699                     l1405:
  1111                           
  1112                           ;MPU6050.c: 64:   Ay = ((int)I2C_Read(0)<<8) | (int)I2C_Read(0);
  1113  0699  3000               	movlw	0
  1114  069A  120A  118A  23D4  120A  118A  	fcall	_I2C_Read
  1115  069F  1283               	bcf	3,5	;RP0=0, select bank0
  1116  06A0  1303               	bcf	3,6	;RP1=0, select bank0
  1117  06A1  00AD               	movwf	??_MPU6050_Read
  1118  06A2  01AE               	clrf	??_MPU6050_Read+1
  1119  06A3  3000               	movlw	0
  1120  06A4  120A  118A  23D4  120A  118A  	fcall	_I2C_Read
  1121  06A9  1283               	bcf	3,5	;RP0=0, select bank0
  1122  06AA  1303               	bcf	3,6	;RP1=0, select bank0
  1123  06AB  00AF               	movwf	??_MPU6050_Read+2
  1124  06AC  01B0               	clrf	??_MPU6050_Read+3
  1125  06AD  082F               	movf	??_MPU6050_Read+2,w
  1126  06AE  00B0               	movwf	??_MPU6050_Read+3
  1127  06AF  01AF               	clrf	??_MPU6050_Read+2
  1128  06B0  082D               	movf	??_MPU6050_Read,w
  1129  06B1  042F               	iorwf	??_MPU6050_Read+2,w
  1130  06B2  00E5               	movwf	MPU6050_Read@Ay
  1131  06B3  082E               	movf	??_MPU6050_Read+1,w
  1132  06B4  0430               	iorwf	??_MPU6050_Read+3,w
  1133  06B5  00E6               	movwf	MPU6050_Read@Ay+1
  1134  06B6                     l1407:
  1135                           
  1136                           ;MPU6050.c: 65:   Az = ((int)I2C_Read(0)<<8) | (int)I2C_Read(0);
  1137  06B6  3000               	movlw	0
  1138  06B7  120A  118A  23D4  120A  118A  	fcall	_I2C_Read
  1139  06BC  1283               	bcf	3,5	;RP0=0, select bank0
  1140  06BD  1303               	bcf	3,6	;RP1=0, select bank0
  1141  06BE  00AD               	movwf	??_MPU6050_Read
  1142  06BF  01AE               	clrf	??_MPU6050_Read+1
  1143  06C0  3000               	movlw	0
  1144  06C1  120A  118A  23D4  120A  118A  	fcall	_I2C_Read
  1145  06C6  1283               	bcf	3,5	;RP0=0, select bank0
  1146  06C7  1303               	bcf	3,6	;RP1=0, select bank0
  1147  06C8  00AF               	movwf	??_MPU6050_Read+2
  1148  06C9  01B0               	clrf	??_MPU6050_Read+3
  1149  06CA  082F               	movf	??_MPU6050_Read+2,w
  1150  06CB  00B0               	movwf	??_MPU6050_Read+3
  1151  06CC  01AF               	clrf	??_MPU6050_Read+2
  1152  06CD  082D               	movf	??_MPU6050_Read,w
  1153  06CE  042F               	iorwf	??_MPU6050_Read+2,w
  1154  06CF  00DB               	movwf	MPU6050_Read@Az
  1155  06D0  082E               	movf	??_MPU6050_Read+1,w
  1156  06D1  0430               	iorwf	??_MPU6050_Read+3,w
  1157  06D2  00DC               	movwf	MPU6050_Read@Az+1
  1158  06D3                     l1409:
  1159                           
  1160                           ;MPU6050.c: 66:   T = ((int)I2C_Read(0)<<8) | (int)I2C_Read(0);
  1161  06D3  3000               	movlw	0
  1162  06D4  120A  118A  23D4  120A  118A  	fcall	_I2C_Read
  1163  06D9  1283               	bcf	3,5	;RP0=0, select bank0
  1164  06DA  1303               	bcf	3,6	;RP1=0, select bank0
  1165  06DB  00AD               	movwf	??_MPU6050_Read
  1166  06DC  01AE               	clrf	??_MPU6050_Read+1
  1167  06DD  3000               	movlw	0
  1168  06DE  120A  118A  23D4  120A  118A  	fcall	_I2C_Read
  1169  06E3  1283               	bcf	3,5	;RP0=0, select bank0
  1170  06E4  1303               	bcf	3,6	;RP1=0, select bank0
  1171  06E5  00AF               	movwf	??_MPU6050_Read+2
  1172  06E6  01B0               	clrf	??_MPU6050_Read+3
  1173  06E7  082F               	movf	??_MPU6050_Read+2,w
  1174  06E8  00B0               	movwf	??_MPU6050_Read+3
  1175  06E9  01AF               	clrf	??_MPU6050_Read+2
  1176  06EA  082D               	movf	??_MPU6050_Read,w
  1177  06EB  042F               	iorwf	??_MPU6050_Read+2,w
  1178  06EC  00DD               	movwf	MPU6050_Read@T
  1179  06ED  082E               	movf	??_MPU6050_Read+1,w
  1180  06EE  0430               	iorwf	??_MPU6050_Read+3,w
  1181  06EF  00DE               	movwf	MPU6050_Read@T+1
  1182  06F0                     l1411:
  1183                           
  1184                           ;MPU6050.c: 67:   Gx = ((int)I2C_Read(0)<<8) | (int)I2C_Read(0);
  1185  06F0  3000               	movlw	0
  1186  06F1  120A  118A  23D4  120A  118A  	fcall	_I2C_Read
  1187  06F6  1283               	bcf	3,5	;RP0=0, select bank0
  1188  06F7  1303               	bcf	3,6	;RP1=0, select bank0
  1189  06F8  00AD               	movwf	??_MPU6050_Read
  1190  06F9  01AE               	clrf	??_MPU6050_Read+1
  1191  06FA  3000               	movlw	0
  1192  06FB  120A  118A  23D4  120A  118A  	fcall	_I2C_Read
  1193  0700  1283               	bcf	3,5	;RP0=0, select bank0
  1194  0701  1303               	bcf	3,6	;RP1=0, select bank0
  1195  0702  00AF               	movwf	??_MPU6050_Read+2
  1196  0703  01B0               	clrf	??_MPU6050_Read+3
  1197  0704  082F               	movf	??_MPU6050_Read+2,w
  1198  0705  00B0               	movwf	??_MPU6050_Read+3
  1199  0706  01AF               	clrf	??_MPU6050_Read+2
  1200  0707  082D               	movf	??_MPU6050_Read,w
  1201  0708  042F               	iorwf	??_MPU6050_Read+2,w
  1202  0709  00DF               	movwf	MPU6050_Read@Gx
  1203  070A  082E               	movf	??_MPU6050_Read+1,w
  1204  070B  0430               	iorwf	??_MPU6050_Read+3,w
  1205  070C  00E0               	movwf	MPU6050_Read@Gx+1
  1206  070D                     l1413:
  1207                           
  1208                           ;MPU6050.c: 68:   Gy = ((int)I2C_Read(0)<<8) | (int)I2C_Read(0);
  1209  070D  3000               	movlw	0
  1210  070E  120A  118A  23D4  120A  118A  	fcall	_I2C_Read
  1211  0713  1283               	bcf	3,5	;RP0=0, select bank0
  1212  0714  1303               	bcf	3,6	;RP1=0, select bank0
  1213  0715  00AD               	movwf	??_MPU6050_Read
  1214  0716  01AE               	clrf	??_MPU6050_Read+1
  1215  0717  3000               	movlw	0
  1216  0718  120A  118A  23D4  120A  118A  	fcall	_I2C_Read
  1217  071D  1283               	bcf	3,5	;RP0=0, select bank0
  1218  071E  1303               	bcf	3,6	;RP1=0, select bank0
  1219  071F  00AF               	movwf	??_MPU6050_Read+2
  1220  0720  01B0               	clrf	??_MPU6050_Read+3
  1221  0721  082F               	movf	??_MPU6050_Read+2,w
  1222  0722  00B0               	movwf	??_MPU6050_Read+3
  1223  0723  01AF               	clrf	??_MPU6050_Read+2
  1224  0724  082D               	movf	??_MPU6050_Read,w
  1225  0725  042F               	iorwf	??_MPU6050_Read+2,w
  1226  0726  00E1               	movwf	MPU6050_Read@Gy
  1227  0727  082E               	movf	??_MPU6050_Read+1,w
  1228  0728  0430               	iorwf	??_MPU6050_Read+3,w
  1229  0729  00E2               	movwf	MPU6050_Read@Gy+1
  1230  072A                     l1415:
  1231                           
  1232                           ;MPU6050.c: 69:   Gz = ((int)I2C_Read(0)<<8) | (int)I2C_Read(1);
  1233  072A  3001               	movlw	1
  1234  072B  120A  118A  23D4  120A  118A  	fcall	_I2C_Read
  1235  0730  1283               	bcf	3,5	;RP0=0, select bank0
  1236  0731  1303               	bcf	3,6	;RP1=0, select bank0
  1237  0732  00AD               	movwf	??_MPU6050_Read
  1238  0733  01AE               	clrf	??_MPU6050_Read+1
  1239  0734  3000               	movlw	0
  1240  0735  120A  118A  23D4  120A  118A  	fcall	_I2C_Read
  1241  073A  1283               	bcf	3,5	;RP0=0, select bank0
  1242  073B  1303               	bcf	3,6	;RP1=0, select bank0
  1243  073C  00AF               	movwf	??_MPU6050_Read+2
  1244  073D  01B0               	clrf	??_MPU6050_Read+3
  1245  073E  082F               	movf	??_MPU6050_Read+2,w
  1246  073F  00B0               	movwf	??_MPU6050_Read+3
  1247  0740  01AF               	clrf	??_MPU6050_Read+2
  1248  0741  082D               	movf	??_MPU6050_Read,w
  1249  0742  042F               	iorwf	??_MPU6050_Read+2,w
  1250  0743  00E3               	movwf	MPU6050_Read@Gz
  1251  0744  082E               	movf	??_MPU6050_Read+1,w
  1252  0745  0430               	iorwf	??_MPU6050_Read+3,w
  1253  0746  00E4               	movwf	MPU6050_Read@Gz+1
  1254  0747                     l1417:
  1255                           
  1256                           ;MPU6050.c: 70:   I2C_Master_Stop();
  1257  0747  120A  118A  2320  120A  118A  	fcall	_I2C_Master_Stop
  1258  074C                     l1419:
  1259                           
  1260                           ;MPU6050.c: 71:   PORTB = (Ay+16384)/128;
  1261  074C  3080               	movlw	128
  1262  074D  00F0               	movwf	___awdiv@divisor
  1263  074E  3000               	movlw	0
  1264  074F  00F1               	movwf	___awdiv@divisor+1
  1265  0750  1283               	bcf	3,5	;RP0=0, select bank0
  1266  0751  1303               	bcf	3,6	;RP1=0, select bank0
  1267  0752  0865               	movf	MPU6050_Read@Ay,w
  1268  0753  3E00               	addlw	0
  1269  0754  00F2               	movwf	___awdiv@dividend
  1270  0755  0866               	movf	MPU6050_Read@Ay+1,w
  1271  0756  1803               	skipnc
  1272  0757  3E01               	addlw	1
  1273  0758  3E40               	addlw	64
  1274  0759  00F3               	movwf	___awdiv@dividend+1
  1275  075A  120A  118A  2479  120A  118A  	fcall	___awdiv
  1276  075F  0870               	movf	?___awdiv,w
  1277  0760  1283               	bcf	3,5	;RP0=0, select bank0
  1278  0761  1303               	bcf	3,6	;RP1=0, select bank0
  1279  0762  0086               	movwf	6	;volatile
  1280  0763                     l1421:
  1281                           
  1282                           ;MPU6050.c: 73:   sprintf(buffer,"Ax = %d    ",Ax);
  1283  0763  303F               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1284  0764  00AD               	movwf	??_MPU6050_Read
  1285  0765  082D               	movf	??_MPU6050_Read,w
  1286  0766  00A0               	movwf	sprintf@f
  1287  0767  085A               	movf	MPU6050_Read@Ax+1,w
  1288  0768  00A2               	movwf	?_sprintf+2
  1289  0769  0859               	movf	MPU6050_Read@Ax,w
  1290  076A  00A1               	movwf	?_sprintf+1
  1291  076B  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1292  076C  120A  118A  257D  120A  118A  	fcall	_sprintf
  1293                           
  1294                           ;MPU6050.c: 74:   UART_Write_String(buffer);
  1295  0771  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1296  0772  120A  118A  2390  120A  118A  	fcall	_UART_Write_String
  1297  0777                     l1423:
  1298                           
  1299                           ;MPU6050.c: 76:   sprintf(buffer," Ay = %d    ",Ay);
  1300  0777  3018               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1301  0778  1283               	bcf	3,5	;RP0=0, select bank0
  1302  0779  1303               	bcf	3,6	;RP1=0, select bank0
  1303  077A  00AD               	movwf	??_MPU6050_Read
  1304  077B  082D               	movf	??_MPU6050_Read,w
  1305  077C  00A0               	movwf	sprintf@f
  1306  077D  0866               	movf	MPU6050_Read@Ay+1,w
  1307  077E  00A2               	movwf	?_sprintf+2
  1308  077F  0865               	movf	MPU6050_Read@Ay,w
  1309  0780  00A1               	movwf	?_sprintf+1
  1310  0781  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1311  0782  120A  118A  257D  120A  118A  	fcall	_sprintf
  1312  0787                     l1425:
  1313                           
  1314                           ;MPU6050.c: 77:   UART_Write_String(buffer);
  1315  0787  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1316  0788  120A  118A  2390  120A  118A  	fcall	_UART_Write_String
  1317                           
  1318                           ;MPU6050.c: 79:   sprintf(buffer," Az = %d    ",Az);
  1319  078D  3032               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1320  078E  1283               	bcf	3,5	;RP0=0, select bank0
  1321  078F  1303               	bcf	3,6	;RP1=0, select bank0
  1322  0790  00AD               	movwf	??_MPU6050_Read
  1323  0791  082D               	movf	??_MPU6050_Read,w
  1324  0792  00A0               	movwf	sprintf@f
  1325  0793  085C               	movf	MPU6050_Read@Az+1,w
  1326  0794  00A2               	movwf	?_sprintf+2
  1327  0795  085B               	movf	MPU6050_Read@Az,w
  1328  0796  00A1               	movwf	?_sprintf+1
  1329  0797  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1330  0798  120A  118A  257D  120A  118A  	fcall	_sprintf
  1331  079D                     l1427:
  1332                           
  1333                           ;MPU6050.c: 80:   UART_Write_String(buffer);
  1334  079D  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1335  079E  120A  118A  2390  120A  118A  	fcall	_UART_Write_String
  1336  07A3                     l1429:
  1337                           
  1338                           ;MPU6050.c: 82:   sprintf(buffer," T = %d  ",T);
  1339  07A3  3056               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1340  07A4  1283               	bcf	3,5	;RP0=0, select bank0
  1341  07A5  1303               	bcf	3,6	;RP1=0, select bank0
  1342  07A6  00AD               	movwf	??_MPU6050_Read
  1343  07A7  082D               	movf	??_MPU6050_Read,w
  1344  07A8  00A0               	movwf	sprintf@f
  1345  07A9  085E               	movf	MPU6050_Read@T+1,w
  1346  07AA  00A2               	movwf	?_sprintf+2
  1347  07AB  085D               	movf	MPU6050_Read@T,w
  1348  07AC  00A1               	movwf	?_sprintf+1
  1349  07AD  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1350  07AE  120A  118A  257D  120A  118A  	fcall	_sprintf
  1351                           
  1352                           ;MPU6050.c: 83:   UART_Write_String(buffer);
  1353  07B3  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1354  07B4  120A  118A  2390  120A  118A  	fcall	_UART_Write_String
  1355  07B9                     l1431:
  1356                           
  1357                           ;MPU6050.c: 85:   sprintf(buffer," Gx = %d    ",Gx);
  1358  07B9  300B               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1359  07BA  1283               	bcf	3,5	;RP0=0, select bank0
  1360  07BB  1303               	bcf	3,6	;RP1=0, select bank0
  1361  07BC  00AD               	movwf	??_MPU6050_Read
  1362  07BD  082D               	movf	??_MPU6050_Read,w
  1363  07BE  00A0               	movwf	sprintf@f
  1364  07BF  0860               	movf	MPU6050_Read@Gx+1,w
  1365  07C0  00A2               	movwf	?_sprintf+2
  1366  07C1  085F               	movf	MPU6050_Read@Gx,w
  1367  07C2  00A1               	movwf	?_sprintf+1
  1368  07C3  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1369  07C4  120A  118A  257D  120A  118A  	fcall	_sprintf
  1370  07C9                     l1433:
  1371                           
  1372                           ;MPU6050.c: 86:   UART_Write_String(buffer);
  1373  07C9  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1374  07CA  120A  118A  2390  120A  118A  	fcall	_UART_Write_String
  1375                           
  1376                           ;MPU6050.c: 88:   sprintf(buffer," Gy = %d    ",Gy);
  1377  07CF  3025               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1378  07D0  1283               	bcf	3,5	;RP0=0, select bank0
  1379  07D1  1303               	bcf	3,6	;RP1=0, select bank0
  1380  07D2  00AD               	movwf	??_MPU6050_Read
  1381  07D3  082D               	movf	??_MPU6050_Read,w
  1382  07D4  00A0               	movwf	sprintf@f
  1383  07D5  0862               	movf	MPU6050_Read@Gy+1,w
  1384  07D6  00A2               	movwf	?_sprintf+2
  1385  07D7  0861               	movf	MPU6050_Read@Gy,w
  1386  07D8  00A1               	movwf	?_sprintf+1
  1387  07D9  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1388  07DA  120A  118A  257D  120A  118A  	fcall	_sprintf
  1389  07DF                     l1435:
  1390                           
  1391                           ;MPU6050.c: 89:   UART_Write_String(buffer);
  1392  07DF  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1393  07E0  120A  118A  2390  120A  118A  	fcall	_UART_Write_String
  1394  07E5                     l1437:
  1395                           
  1396                           ;MPU6050.c: 91:   sprintf(buffer," Gz = %d\r\n",Gz);
  1397  07E5  304B               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1398  07E6  1283               	bcf	3,5	;RP0=0, select bank0
  1399  07E7  1303               	bcf	3,6	;RP1=0, select bank0
  1400  07E8  00AD               	movwf	??_MPU6050_Read
  1401  07E9  082D               	movf	??_MPU6050_Read,w
  1402  07EA  00A0               	movwf	sprintf@f
  1403  07EB  0864               	movf	MPU6050_Read@Gz+1,w
  1404  07EC  00A2               	movwf	?_sprintf+2
  1405  07ED  0863               	movf	MPU6050_Read@Gz,w
  1406  07EE  00A1               	movwf	?_sprintf+1
  1407  07EF  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1408  07F0  120A  118A  257D  120A  118A  	fcall	_sprintf
  1409                           
  1410                           ;MPU6050.c: 92:   UART_Write_String(buffer);
  1411  07F5  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1412  07F6  120A  118A  2390  120A  118A  	fcall	_UART_Write_String
  1413  07FB                     l167:
  1414  07FB  0008               	return
  1415  07FC                     __end_of_MPU6050_Read:
  1416                           
  1417                           	psect	text3
  1418  057D                     __ptext3:	
  1419 ;; *************** function _sprintf *****************
  1420 ;; Defined at:
  1421 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1422 ;; Parameters:    Size  Location     Type
  1423 ;;  sp              1    wreg     PTR unsigned char 
  1424 ;;		 -> MPU6050_Read@buffer(40), 
  1425 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1426 ;;		 -> STR_7(11), STR_6(13), STR_5(13), STR_4(10), 
  1427 ;;		 -> STR_3(13), STR_2(13), STR_1(12), 
  1428 ;; Auto vars:     Size  Location     Type
  1429 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  1430 ;;		 -> MPU6050_Read@buffer(40), 
  1431 ;;  tmpval          4    0        struct .
  1432 ;;  val             2    9[BANK0 ] unsigned int 
  1433 ;;  cp              2    0        PTR const unsigned char 
  1434 ;;  len             2    0        unsigned int 
  1435 ;;  c               1   12[BANK0 ] unsigned char 
  1436 ;;  prec            1    8[BANK0 ] char 
  1437 ;;  flag            1    7[BANK0 ] unsigned char 
  1438 ;;  ap              1    6[BANK0 ] PTR void [1]
  1439 ;;		 -> ?_sprintf(2), 
  1440 ;; Return value:  Size  Location     Type
  1441 ;;                  2    0[BANK0 ] int 
  1442 ;; Registers used:
  1443 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1444 ;; Tracked objects:
  1445 ;;		On entry : 0/0
  1446 ;;		On exit  : 0/0
  1447 ;;		Unchanged: 0/0
  1448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1449 ;;      Params:         0       3       0       0       0
  1450 ;;      Locals:         0       7       0       0       0
  1451 ;;      Temps:          0       3       0       0       0
  1452 ;;      Totals:         0      13       0       0       0
  1453 ;;Total ram usage:       13 bytes
  1454 ;; Hardware stack levels used:    1
  1455 ;; Hardware stack levels required when called:    1
  1456 ;; This function calls:
  1457 ;;		___lwdiv
  1458 ;;		___lwmod
  1459 ;; This function is called by:
  1460 ;;		_MPU6050_Read
  1461 ;; This function uses a non-reentrant model
  1462 ;;
  1463                           
  1464                           
  1465                           ;psect for function _sprintf
  1466  057D                     _sprintf:
  1467                           
  1468                           ;incstack = 0
  1469                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1470                           ;sprintf@sp stored from wreg
  1471  057D  1283               	bcf	3,5	;RP0=0, select bank0
  1472  057E  1303               	bcf	3,6	;RP1=0, select bank0
  1473  057F  00AB               	movwf	sprintf@sp
  1474  0580                     l1243:
  1475                           
  1476                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1477  0580  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1478  0581  00A3               	movwf	??_sprintf
  1479  0582  0823               	movf	??_sprintf,w
  1480  0583  00A6               	movwf	sprintf@ap
  1481                           
  1482                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1483  0584  2E4E               	goto	l1295
  1484  0585                     l1245:
  1485                           
  1486                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1487  0585  3025               	movlw	37
  1488  0586  062C               	xorwf	sprintf@c,w
  1489  0587  1903               	btfsc	3,2
  1490  0588  2D8A               	goto	u651
  1491  0589  2D8B               	goto	u650
  1492  058A                     u651:
  1493  058A  2D97               	goto	l1251
  1494  058B                     u650:
  1495  058B                     l1247:
  1496                           
  1497                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1498  058B  082C               	movf	sprintf@c,w
  1499  058C  00A3               	movwf	??_sprintf
  1500  058D  082B               	movf	sprintf@sp,w
  1501  058E  0084               	movwf	4
  1502  058F  0823               	movf	??_sprintf,w
  1503  0590  1383               	bcf	3,7	;select IRP bank0
  1504  0591  0080               	movwf	0
  1505  0592                     l1249:
  1506  0592  3001               	movlw	1
  1507  0593  00A3               	movwf	??_sprintf
  1508  0594  0823               	movf	??_sprintf,w
  1509  0595  07AB               	addwf	sprintf@sp,f
  1510                           
  1511                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1512  0596  2E4E               	goto	l1295
  1513  0597                     l1251:
  1514                           
  1515                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1516  0597  01A7               	clrf	sprintf@flag
  1517  0598                     l1255:	
  1518                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1519                           
  1520  0598  3001               	movlw	1
  1521  0599  07A0               	addwf	sprintf@f,f
  1522  059A  30FF               	movlw	-1
  1523  059B  0720               	addwf	sprintf@f,w
  1524  059C  0084               	movwf	4
  1525  059D  120A  118A  2003  120A  118A  	fcall	stringdir
  1526  05A2  00AC               	movwf	sprintf@c
  1527  05A3  00A3               	movwf	??_sprintf
  1528  05A4  01A4               	clrf	??_sprintf+1
  1529                           
  1530                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1531                           ; Switch size 1, requested type "simple"
  1532                           ; Number of cases is 1, Range of values is 0 to 0
  1533                           ; switch strategies available:
  1534                           ; Name         Instructions Cycles
  1535                           ; simple_byte            4     3 (average)
  1536                           ; direct_byte           11     8 (fixed)
  1537                           ; jumptable            260     6 (fixed)
  1538                           ;	Chosen strategy is simple_byte
  1539  05A5  0824               	movf	??_sprintf+1,w
  1540  05A6  3A00               	xorlw	0	; case 0
  1541  05A7  1903               	skipnz
  1542  05A8  2DAA               	goto	l1487
  1543  05A9  2E4E               	goto	l1295
  1544  05AA                     l1487:
  1545                           
  1546                           ; Switch size 1, requested type "simple"
  1547                           ; Number of cases is 3, Range of values is 0 to 105
  1548                           ; switch strategies available:
  1549                           ; Name         Instructions Cycles
  1550                           ; simple_byte           10     6 (average)
  1551                           ; jumptable            260     6 (fixed)
  1552                           ;	Chosen strategy is simple_byte
  1553  05AA  0823               	movf	??_sprintf,w
  1554  05AB  3A00               	xorlw	0	; case 0
  1555  05AC  1903               	skipnz
  1556  05AD  2E60               	goto	l1297
  1557  05AE  3A64               	xorlw	100	; case 100
  1558  05AF  1903               	skipnz
  1559  05B0  2DB5               	goto	l1257
  1560  05B1  3A0D               	xorlw	13	; case 105
  1561  05B2  1903               	skipnz
  1562  05B3  2DB5               	goto	l1257
  1563  05B4  2E4E               	goto	l1295
  1564  05B5                     l1257:
  1565                           
  1566                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1567  05B5  0826               	movf	sprintf@ap,w
  1568  05B6  0084               	movwf	4
  1569  05B7  1383               	bcf	3,7	;select IRP bank0
  1570  05B8  0800               	movf	0,w
  1571  05B9  00A9               	movwf	sprintf@val
  1572  05BA  0A84               	incf	4,f
  1573  05BB  0800               	movf	0,w
  1574  05BC  00AA               	movwf	sprintf@val+1
  1575  05BD                     l1259:
  1576  05BD  3002               	movlw	2
  1577  05BE  00A3               	movwf	??_sprintf
  1578  05BF  0823               	movf	??_sprintf,w
  1579  05C0  07A6               	addwf	sprintf@ap,f
  1580  05C1                     l1261:
  1581                           
  1582                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1583  05C1  1FAA               	btfss	sprintf@val+1,7
  1584  05C2  2DC4               	goto	u661
  1585  05C3  2DC5               	goto	u660
  1586  05C4                     u661:
  1587  05C4  2DCE               	goto	l1267
  1588  05C5                     u660:
  1589  05C5                     l1263:
  1590                           
  1591                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1592  05C5  3003               	movlw	3
  1593  05C6  00A3               	movwf	??_sprintf
  1594  05C7  0823               	movf	??_sprintf,w
  1595  05C8  04A7               	iorwf	sprintf@flag,f
  1596  05C9                     l1265:
  1597                           
  1598                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1599  05C9  09A9               	comf	sprintf@val,f
  1600  05CA  09AA               	comf	sprintf@val+1,f
  1601  05CB  0AA9               	incf	sprintf@val,f
  1602  05CC  1903               	skipnz
  1603  05CD  0AAA               	incf	sprintf@val+1,f
  1604  05CE                     l1267:
  1605                           
  1606                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1607  05CE  01AC               	clrf	sprintf@c
  1608  05CF  0AAC               	incf	sprintf@c,f
  1609  05D0                     l1273:
  1610                           
  1611                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1612  05D0  082C               	movf	sprintf@c,w
  1613  05D1  00A3               	movwf	??_sprintf
  1614  05D2  0723               	addwf	??_sprintf,w
  1615  05D3  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1616  05D4  0084               	movwf	4
  1617  05D5  120A  118A  2003  120A  118A  	fcall	stringdir
  1618  05DA  00A4               	movwf	??_sprintf+1
  1619  05DB  120A  118A  2003  120A  118A  	fcall	stringdir
  1620  05E0  00A5               	movwf	??_sprintf+2
  1621  05E1  0825               	movf	??_sprintf+2,w
  1622  05E2  022A               	subwf	sprintf@val+1,w
  1623  05E3  1D03               	skipz
  1624  05E4  2DE7               	goto	u675
  1625  05E5  0824               	movf	??_sprintf+1,w
  1626  05E6  0229               	subwf	sprintf@val,w
  1627  05E7                     u675:
  1628  05E7  1803               	skipnc
  1629  05E8  2DEA               	goto	u671
  1630  05E9  2DEB               	goto	u670
  1631  05EA                     u671:
  1632  05EA  2DEC               	goto	l1277
  1633  05EB                     u670:
  1634  05EB  2DF6               	goto	l1279
  1635  05EC                     l1277:
  1636  05EC  3001               	movlw	1
  1637  05ED  00A3               	movwf	??_sprintf
  1638  05EE  0823               	movf	??_sprintf,w
  1639  05EF  07AC               	addwf	sprintf@c,f
  1640  05F0  3005               	movlw	5
  1641  05F1  062C               	xorwf	sprintf@c,w
  1642  05F2  1D03               	btfss	3,2
  1643  05F3  2DF5               	goto	u681
  1644  05F4  2DF6               	goto	u680
  1645  05F5                     u681:
  1646  05F5  2DD0               	goto	l1273
  1647  05F6                     u680:
  1648  05F6                     l1279:
  1649                           
  1650                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1651  05F6  0827               	movf	sprintf@flag,w
  1652  05F7  3903               	andlw	3
  1653  05F8  1903               	btfsc	3,2
  1654  05F9  2DFB               	goto	u691
  1655  05FA  2DFC               	goto	u690
  1656  05FB                     u691:
  1657  05FB  2E07               	goto	l1285
  1658  05FC                     u690:
  1659  05FC                     l1281:
  1660                           
  1661                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1662  05FC  302D               	movlw	45
  1663  05FD  00A3               	movwf	??_sprintf
  1664  05FE  082B               	movf	sprintf@sp,w
  1665  05FF  0084               	movwf	4
  1666  0600  0823               	movf	??_sprintf,w
  1667  0601  1383               	bcf	3,7	;select IRP bank0
  1668  0602  0080               	movwf	0
  1669  0603                     l1283:
  1670  0603  3001               	movlw	1
  1671  0604  00A3               	movwf	??_sprintf
  1672  0605  0823               	movf	??_sprintf,w
  1673  0606  07AB               	addwf	sprintf@sp,f
  1674  0607                     l1285:
  1675                           
  1676                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1677  0607  082C               	movf	sprintf@c,w
  1678  0608  00A3               	movwf	??_sprintf
  1679  0609  0823               	movf	??_sprintf,w
  1680  060A  00A8               	movwf	sprintf@prec
  1681                           
  1682                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1683  060B  2E45               	goto	l1293
  1684  060C                     l1287:
  1685                           
  1686                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1687  060C  300A               	movlw	10
  1688  060D  00F8               	movwf	___lwmod@divisor
  1689  060E  3000               	movlw	0
  1690  060F  00F9               	movwf	___lwmod@divisor+1
  1691  0610  0828               	movf	sprintf@prec,w
  1692  0611  00A3               	movwf	??_sprintf
  1693  0612  0723               	addwf	??_sprintf,w
  1694  0613  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1695  0614  0084               	movwf	4
  1696  0615  120A  118A  2003  120A  118A  	fcall	stringdir
  1697  061A  00F0               	movwf	___lwdiv@divisor
  1698  061B  120A  118A  2003  120A  118A  	fcall	stringdir
  1699  0620  00F1               	movwf	___lwdiv@divisor+1
  1700  0621  082A               	movf	sprintf@val+1,w
  1701  0622  00F3               	movwf	___lwdiv@dividend+1
  1702  0623  0829               	movf	sprintf@val,w
  1703  0624  00F2               	movwf	___lwdiv@dividend
  1704  0625  120A  118A  2435  120A  118A  	fcall	___lwdiv
  1705  062A  0871               	movf	?___lwdiv+1,w
  1706  062B  00FB               	movwf	___lwmod@dividend+1
  1707  062C  0870               	movf	?___lwdiv,w
  1708  062D  00FA               	movwf	___lwmod@dividend
  1709  062E  120A  118A  23FB  120A  118A  	fcall	___lwmod
  1710  0633  0878               	movf	?___lwmod,w
  1711  0634  3E30               	addlw	48
  1712  0635  1283               	bcf	3,5	;RP0=0, select bank0
  1713  0636  1303               	bcf	3,6	;RP1=0, select bank0
  1714  0637  00A4               	movwf	??_sprintf+1
  1715  0638  0824               	movf	??_sprintf+1,w
  1716  0639  00AC               	movwf	sprintf@c
  1717  063A                     l1289:
  1718                           
  1719                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1720  063A  082C               	movf	sprintf@c,w
  1721  063B  00A3               	movwf	??_sprintf
  1722  063C  082B               	movf	sprintf@sp,w
  1723  063D  0084               	movwf	4
  1724  063E  0823               	movf	??_sprintf,w
  1725  063F  1383               	bcf	3,7	;select IRP bank0
  1726  0640  0080               	movwf	0
  1727  0641                     l1291:
  1728  0641  3001               	movlw	1
  1729  0642  00A3               	movwf	??_sprintf
  1730  0643  0823               	movf	??_sprintf,w
  1731  0644  07AB               	addwf	sprintf@sp,f
  1732  0645                     l1293:
  1733                           
  1734                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1735  0645  30FF               	movlw	255
  1736  0646  00A3               	movwf	??_sprintf
  1737  0647  0823               	movf	??_sprintf,w
  1738  0648  07A8               	addwf	sprintf@prec,f
  1739  0649  0A28               	incf	sprintf@prec,w
  1740  064A  1D03               	btfss	3,2
  1741  064B  2E4D               	goto	u701
  1742  064C  2E4E               	goto	u700
  1743  064D                     u701:
  1744  064D  2E0C               	goto	l1287
  1745  064E                     u700:
  1746  064E                     l1295:
  1747                           
  1748                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1749  064E  3001               	movlw	1
  1750  064F  07A0               	addwf	sprintf@f,f
  1751  0650  30FF               	movlw	-1
  1752  0651  0720               	addwf	sprintf@f,w
  1753  0652  0084               	movwf	4
  1754  0653  120A  118A  2003  120A  118A  	fcall	stringdir
  1755  0658  00A3               	movwf	??_sprintf
  1756  0659  0823               	movf	??_sprintf,w
  1757  065A  00AC               	movwf	sprintf@c
  1758  065B  082C               	movf	sprintf@c,w
  1759  065C  1D03               	btfss	3,2
  1760  065D  2E5F               	goto	u711
  1761  065E  2E60               	goto	u710
  1762  065F                     u711:
  1763  065F  2D85               	goto	l1245
  1764  0660                     u710:
  1765  0660                     l1297:
  1766                           
  1767                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1768  0660  082B               	movf	sprintf@sp,w
  1769  0661  0084               	movwf	4
  1770  0662  1383               	bcf	3,7	;select IRP bank0
  1771  0663  0180               	clrf	0
  1772  0664                     l277:
  1773  0664  0008               	return
  1774  0665                     __end_of_sprintf:
  1775                           
  1776                           	psect	text4
  1777  03FB                     __ptext4:	
  1778 ;; *************** function ___lwmod *****************
  1779 ;; Defined at:
  1780 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1781 ;; Parameters:    Size  Location     Type
  1782 ;;  divisor         2    8[COMMON] unsigned int 
  1783 ;;  dividend        2   10[COMMON] unsigned int 
  1784 ;; Auto vars:     Size  Location     Type
  1785 ;;  counter         1   13[COMMON] unsigned char 
  1786 ;; Return value:  Size  Location     Type
  1787 ;;                  2    8[COMMON] unsigned int 
  1788 ;; Registers used:
  1789 ;;		wreg, status,2, status,0
  1790 ;; Tracked objects:
  1791 ;;		On entry : 0/0
  1792 ;;		On exit  : 0/0
  1793 ;;		Unchanged: 0/0
  1794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1795 ;;      Params:         4       0       0       0       0
  1796 ;;      Locals:         1       0       0       0       0
  1797 ;;      Temps:          1       0       0       0       0
  1798 ;;      Totals:         6       0       0       0       0
  1799 ;;Total ram usage:        6 bytes
  1800 ;; Hardware stack levels used:    1
  1801 ;; This function calls:
  1802 ;;		Nothing
  1803 ;; This function is called by:
  1804 ;;		_sprintf
  1805 ;; This function uses a non-reentrant model
  1806 ;;
  1807                           
  1808                           
  1809                           ;psect for function ___lwmod
  1810  03FB                     ___lwmod:
  1811  03FB                     l1191:	
  1812                           ;incstack = 0
  1813                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1814                           
  1815  03FB  0878               	movf	___lwmod@divisor,w
  1816  03FC  0479               	iorwf	___lwmod@divisor+1,w
  1817  03FD  1903               	btfsc	3,2
  1818  03FE  2C00               	goto	u551
  1819  03FF  2C01               	goto	u550
  1820  0400                     u551:
  1821  0400  2C30               	goto	l1209
  1822  0401                     u550:
  1823  0401                     l1193:
  1824  0401  01FD               	clrf	___lwmod@counter
  1825  0402  0AFD               	incf	___lwmod@counter,f
  1826  0403  2C0F               	goto	l1199
  1827  0404                     l1195:
  1828  0404  3001               	movlw	1
  1829  0405                     u565:
  1830  0405  1003               	clrc
  1831  0406  0DF8               	rlf	___lwmod@divisor,f
  1832  0407  0DF9               	rlf	___lwmod@divisor+1,f
  1833  0408  3EFF               	addlw	-1
  1834  0409  1D03               	skipz
  1835  040A  2C05               	goto	u565
  1836  040B                     l1197:
  1837  040B  3001               	movlw	1
  1838  040C  00FC               	movwf	??___lwmod
  1839  040D  087C               	movf	??___lwmod,w
  1840  040E  07FD               	addwf	___lwmod@counter,f
  1841  040F                     l1199:
  1842  040F  1FF9               	btfss	___lwmod@divisor+1,7
  1843  0410  2C12               	goto	u571
  1844  0411  2C13               	goto	u570
  1845  0412                     u571:
  1846  0412  2C04               	goto	l1195
  1847  0413                     u570:
  1848  0413                     l1201:
  1849  0413  0879               	movf	___lwmod@divisor+1,w
  1850  0414  027B               	subwf	___lwmod@dividend+1,w
  1851  0415  1D03               	skipz
  1852  0416  2C19               	goto	u585
  1853  0417  0878               	movf	___lwmod@divisor,w
  1854  0418  027A               	subwf	___lwmod@dividend,w
  1855  0419                     u585:
  1856  0419  1C03               	skipc
  1857  041A  2C1C               	goto	u581
  1858  041B  2C1D               	goto	u580
  1859  041C                     u581:
  1860  041C  2C23               	goto	l1205
  1861  041D                     u580:
  1862  041D                     l1203:
  1863  041D  0878               	movf	___lwmod@divisor,w
  1864  041E  02FA               	subwf	___lwmod@dividend,f
  1865  041F  0879               	movf	___lwmod@divisor+1,w
  1866  0420  1C03               	skipc
  1867  0421  03FB               	decf	___lwmod@dividend+1,f
  1868  0422  02FB               	subwf	___lwmod@dividend+1,f
  1869  0423                     l1205:
  1870  0423  3001               	movlw	1
  1871  0424                     u595:
  1872  0424  1003               	clrc
  1873  0425  0CF9               	rrf	___lwmod@divisor+1,f
  1874  0426  0CF8               	rrf	___lwmod@divisor,f
  1875  0427  3EFF               	addlw	-1
  1876  0428  1D03               	skipz
  1877  0429  2C24               	goto	u595
  1878  042A                     l1207:
  1879  042A  3001               	movlw	1
  1880  042B  02FD               	subwf	___lwmod@counter,f
  1881  042C  1D03               	btfss	3,2
  1882  042D  2C2F               	goto	u601
  1883  042E  2C30               	goto	u600
  1884  042F                     u601:
  1885  042F  2C13               	goto	l1201
  1886  0430                     u600:
  1887  0430                     l1209:
  1888  0430  087B               	movf	___lwmod@dividend+1,w
  1889  0431  00F9               	movwf	?___lwmod+1
  1890  0432  087A               	movf	___lwmod@dividend,w
  1891  0433  00F8               	movwf	?___lwmod
  1892  0434                     l563:
  1893  0434  0008               	return
  1894  0435                     __end_of___lwmod:
  1895                           
  1896                           	psect	text5
  1897  0435                     __ptext5:	
  1898 ;; *************** function ___lwdiv *****************
  1899 ;; Defined at:
  1900 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1901 ;; Parameters:    Size  Location     Type
  1902 ;;  divisor         2    0[COMMON] unsigned int 
  1903 ;;  dividend        2    2[COMMON] unsigned int 
  1904 ;; Auto vars:     Size  Location     Type
  1905 ;;  quotient        2    5[COMMON] unsigned int 
  1906 ;;  counter         1    7[COMMON] unsigned char 
  1907 ;; Return value:  Size  Location     Type
  1908 ;;                  2    0[COMMON] unsigned int 
  1909 ;; Registers used:
  1910 ;;		wreg, status,2, status,0
  1911 ;; Tracked objects:
  1912 ;;		On entry : 0/0
  1913 ;;		On exit  : 0/0
  1914 ;;		Unchanged: 0/0
  1915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1916 ;;      Params:         4       0       0       0       0
  1917 ;;      Locals:         3       0       0       0       0
  1918 ;;      Temps:          1       0       0       0       0
  1919 ;;      Totals:         8       0       0       0       0
  1920 ;;Total ram usage:        8 bytes
  1921 ;; Hardware stack levels used:    1
  1922 ;; This function calls:
  1923 ;;		Nothing
  1924 ;; This function is called by:
  1925 ;;		_sprintf
  1926 ;; This function uses a non-reentrant model
  1927 ;;
  1928                           
  1929                           
  1930                           ;psect for function ___lwdiv
  1931  0435                     ___lwdiv:
  1932  0435                     l1165:	
  1933                           ;incstack = 0
  1934                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1935                           
  1936  0435  01F5               	clrf	___lwdiv@quotient
  1937  0436  01F6               	clrf	___lwdiv@quotient+1
  1938  0437                     l1167:
  1939  0437  0870               	movf	___lwdiv@divisor,w
  1940  0438  0471               	iorwf	___lwdiv@divisor+1,w
  1941  0439  1903               	btfsc	3,2
  1942  043A  2C3C               	goto	u481
  1943  043B  2C3D               	goto	u480
  1944  043C                     u481:
  1945  043C  2C74               	goto	l1187
  1946  043D                     u480:
  1947  043D                     l1169:
  1948  043D  01F7               	clrf	___lwdiv@counter
  1949  043E  0AF7               	incf	___lwdiv@counter,f
  1950  043F  2C4B               	goto	l1175
  1951  0440                     l1171:
  1952  0440  3001               	movlw	1
  1953  0441                     u495:
  1954  0441  1003               	clrc
  1955  0442  0DF0               	rlf	___lwdiv@divisor,f
  1956  0443  0DF1               	rlf	___lwdiv@divisor+1,f
  1957  0444  3EFF               	addlw	-1
  1958  0445  1D03               	skipz
  1959  0446  2C41               	goto	u495
  1960  0447                     l1173:
  1961  0447  3001               	movlw	1
  1962  0448  00F4               	movwf	??___lwdiv
  1963  0449  0874               	movf	??___lwdiv,w
  1964  044A  07F7               	addwf	___lwdiv@counter,f
  1965  044B                     l1175:
  1966  044B  1FF1               	btfss	___lwdiv@divisor+1,7
  1967  044C  2C4E               	goto	u501
  1968  044D  2C4F               	goto	u500
  1969  044E                     u501:
  1970  044E  2C40               	goto	l1171
  1971  044F                     u500:
  1972  044F                     l1177:
  1973  044F  3001               	movlw	1
  1974  0450                     u515:
  1975  0450  1003               	clrc
  1976  0451  0DF5               	rlf	___lwdiv@quotient,f
  1977  0452  0DF6               	rlf	___lwdiv@quotient+1,f
  1978  0453  3EFF               	addlw	-1
  1979  0454  1D03               	skipz
  1980  0455  2C50               	goto	u515
  1981  0456  0871               	movf	___lwdiv@divisor+1,w
  1982  0457  0273               	subwf	___lwdiv@dividend+1,w
  1983  0458  1D03               	skipz
  1984  0459  2C5C               	goto	u525
  1985  045A  0870               	movf	___lwdiv@divisor,w
  1986  045B  0272               	subwf	___lwdiv@dividend,w
  1987  045C                     u525:
  1988  045C  1C03               	skipc
  1989  045D  2C5F               	goto	u521
  1990  045E  2C60               	goto	u520
  1991  045F                     u521:
  1992  045F  2C67               	goto	l1183
  1993  0460                     u520:
  1994  0460                     l1179:
  1995  0460  0870               	movf	___lwdiv@divisor,w
  1996  0461  02F2               	subwf	___lwdiv@dividend,f
  1997  0462  0871               	movf	___lwdiv@divisor+1,w
  1998  0463  1C03               	skipc
  1999  0464  03F3               	decf	___lwdiv@dividend+1,f
  2000  0465  02F3               	subwf	___lwdiv@dividend+1,f
  2001  0466                     l1181:
  2002  0466  1475               	bsf	___lwdiv@quotient,0
  2003  0467                     l1183:
  2004  0467  3001               	movlw	1
  2005  0468                     u535:
  2006  0468  1003               	clrc
  2007  0469  0CF1               	rrf	___lwdiv@divisor+1,f
  2008  046A  0CF0               	rrf	___lwdiv@divisor,f
  2009  046B  3EFF               	addlw	-1
  2010  046C  1D03               	skipz
  2011  046D  2C68               	goto	u535
  2012  046E                     l1185:
  2013  046E  3001               	movlw	1
  2014  046F  02F7               	subwf	___lwdiv@counter,f
  2015  0470  1D03               	btfss	3,2
  2016  0471  2C73               	goto	u541
  2017  0472  2C74               	goto	u540
  2018  0473                     u541:
  2019  0473  2C4F               	goto	l1177
  2020  0474                     u540:
  2021  0474                     l1187:
  2022  0474  0876               	movf	___lwdiv@quotient+1,w
  2023  0475  00F1               	movwf	?___lwdiv+1
  2024  0476  0875               	movf	___lwdiv@quotient,w
  2025  0477  00F0               	movwf	?___lwdiv
  2026  0478                     l553:
  2027  0478  0008               	return
  2028  0479                     __end_of___lwdiv:
  2029                           
  2030                           	psect	text6
  2031  0479                     __ptext6:	
  2032 ;; *************** function ___awdiv *****************
  2033 ;; Defined at:
  2034 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2035 ;; Parameters:    Size  Location     Type
  2036 ;;  divisor         2    0[COMMON] int 
  2037 ;;  dividend        2    2[COMMON] int 
  2038 ;; Auto vars:     Size  Location     Type
  2039 ;;  quotient        2    7[COMMON] int 
  2040 ;;  sign            1    6[COMMON] unsigned char 
  2041 ;;  counter         1    5[COMMON] unsigned char 
  2042 ;; Return value:  Size  Location     Type
  2043 ;;                  2    0[COMMON] int 
  2044 ;; Registers used:
  2045 ;;		wreg, status,2, status,0
  2046 ;; Tracked objects:
  2047 ;;		On entry : 0/0
  2048 ;;		On exit  : 0/0
  2049 ;;		Unchanged: 0/0
  2050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2051 ;;      Params:         4       0       0       0       0
  2052 ;;      Locals:         4       0       0       0       0
  2053 ;;      Temps:          1       0       0       0       0
  2054 ;;      Totals:         9       0       0       0       0
  2055 ;;Total ram usage:        9 bytes
  2056 ;; Hardware stack levels used:    1
  2057 ;; This function calls:
  2058 ;;		Nothing
  2059 ;; This function is called by:
  2060 ;;		_MPU6050_Read
  2061 ;; This function uses a non-reentrant model
  2062 ;;
  2063                           
  2064                           
  2065                           ;psect for function ___awdiv
  2066  0479                     ___awdiv:
  2067  0479                     l1305:	
  2068                           ;incstack = 0
  2069                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2070                           
  2071  0479  01F6               	clrf	___awdiv@sign
  2072  047A                     l1307:
  2073  047A  1FF1               	btfss	___awdiv@divisor+1,7
  2074  047B  2C7D               	goto	u721
  2075  047C  2C7E               	goto	u720
  2076  047D                     u721:
  2077  047D  2C85               	goto	l1313
  2078  047E                     u720:
  2079  047E                     l1309:
  2080  047E  09F0               	comf	___awdiv@divisor,f
  2081  047F  09F1               	comf	___awdiv@divisor+1,f
  2082  0480  0AF0               	incf	___awdiv@divisor,f
  2083  0481  1903               	skipnz
  2084  0482  0AF1               	incf	___awdiv@divisor+1,f
  2085  0483                     l1311:
  2086  0483  01F6               	clrf	___awdiv@sign
  2087  0484  0AF6               	incf	___awdiv@sign,f
  2088  0485                     l1313:
  2089  0485  1FF3               	btfss	___awdiv@dividend+1,7
  2090  0486  2C88               	goto	u731
  2091  0487  2C89               	goto	u730
  2092  0488                     u731:
  2093  0488  2C92               	goto	l1319
  2094  0489                     u730:
  2095  0489                     l1315:
  2096  0489  09F2               	comf	___awdiv@dividend,f
  2097  048A  09F3               	comf	___awdiv@dividend+1,f
  2098  048B  0AF2               	incf	___awdiv@dividend,f
  2099  048C  1903               	skipnz
  2100  048D  0AF3               	incf	___awdiv@dividend+1,f
  2101  048E                     l1317:
  2102  048E  3001               	movlw	1
  2103  048F  00F4               	movwf	??___awdiv
  2104  0490  0874               	movf	??___awdiv,w
  2105  0491  06F6               	xorwf	___awdiv@sign,f
  2106  0492                     l1319:
  2107  0492  01F7               	clrf	___awdiv@quotient
  2108  0493  01F8               	clrf	___awdiv@quotient+1
  2109  0494                     l1321:
  2110  0494  0870               	movf	___awdiv@divisor,w
  2111  0495  0471               	iorwf	___awdiv@divisor+1,w
  2112  0496  1903               	btfsc	3,2
  2113  0497  2C99               	goto	u741
  2114  0498  2C9A               	goto	u740
  2115  0499                     u741:
  2116  0499  2CD1               	goto	l1341
  2117  049A                     u740:
  2118  049A                     l1323:
  2119  049A  01F5               	clrf	___awdiv@counter
  2120  049B  0AF5               	incf	___awdiv@counter,f
  2121  049C  2CA8               	goto	l1329
  2122  049D                     l1325:
  2123  049D  3001               	movlw	1
  2124  049E                     u755:
  2125  049E  1003               	clrc
  2126  049F  0DF0               	rlf	___awdiv@divisor,f
  2127  04A0  0DF1               	rlf	___awdiv@divisor+1,f
  2128  04A1  3EFF               	addlw	-1
  2129  04A2  1D03               	skipz
  2130  04A3  2C9E               	goto	u755
  2131  04A4                     l1327:
  2132  04A4  3001               	movlw	1
  2133  04A5  00F4               	movwf	??___awdiv
  2134  04A6  0874               	movf	??___awdiv,w
  2135  04A7  07F5               	addwf	___awdiv@counter,f
  2136  04A8                     l1329:
  2137  04A8  1FF1               	btfss	___awdiv@divisor+1,7
  2138  04A9  2CAB               	goto	u761
  2139  04AA  2CAC               	goto	u760
  2140  04AB                     u761:
  2141  04AB  2C9D               	goto	l1325
  2142  04AC                     u760:
  2143  04AC                     l1331:
  2144  04AC  3001               	movlw	1
  2145  04AD                     u775:
  2146  04AD  1003               	clrc
  2147  04AE  0DF7               	rlf	___awdiv@quotient,f
  2148  04AF  0DF8               	rlf	___awdiv@quotient+1,f
  2149  04B0  3EFF               	addlw	-1
  2150  04B1  1D03               	skipz
  2151  04B2  2CAD               	goto	u775
  2152  04B3  0871               	movf	___awdiv@divisor+1,w
  2153  04B4  0273               	subwf	___awdiv@dividend+1,w
  2154  04B5  1D03               	skipz
  2155  04B6  2CB9               	goto	u785
  2156  04B7  0870               	movf	___awdiv@divisor,w
  2157  04B8  0272               	subwf	___awdiv@dividend,w
  2158  04B9                     u785:
  2159  04B9  1C03               	skipc
  2160  04BA  2CBC               	goto	u781
  2161  04BB  2CBD               	goto	u780
  2162  04BC                     u781:
  2163  04BC  2CC4               	goto	l1337
  2164  04BD                     u780:
  2165  04BD                     l1333:
  2166  04BD  0870               	movf	___awdiv@divisor,w
  2167  04BE  02F2               	subwf	___awdiv@dividend,f
  2168  04BF  0871               	movf	___awdiv@divisor+1,w
  2169  04C0  1C03               	skipc
  2170  04C1  03F3               	decf	___awdiv@dividend+1,f
  2171  04C2  02F3               	subwf	___awdiv@dividend+1,f
  2172  04C3                     l1335:
  2173  04C3  1477               	bsf	___awdiv@quotient,0
  2174  04C4                     l1337:
  2175  04C4  3001               	movlw	1
  2176  04C5                     u795:
  2177  04C5  1003               	clrc
  2178  04C6  0CF1               	rrf	___awdiv@divisor+1,f
  2179  04C7  0CF0               	rrf	___awdiv@divisor,f
  2180  04C8  3EFF               	addlw	-1
  2181  04C9  1D03               	skipz
  2182  04CA  2CC5               	goto	u795
  2183  04CB                     l1339:
  2184  04CB  3001               	movlw	1
  2185  04CC  02F5               	subwf	___awdiv@counter,f
  2186  04CD  1D03               	btfss	3,2
  2187  04CE  2CD0               	goto	u801
  2188  04CF  2CD1               	goto	u800
  2189  04D0                     u801:
  2190  04D0  2CAC               	goto	l1331
  2191  04D1                     u800:
  2192  04D1                     l1341:
  2193  04D1  0876               	movf	___awdiv@sign,w
  2194  04D2  1903               	btfsc	3,2
  2195  04D3  2CD5               	goto	u811
  2196  04D4  2CD6               	goto	u810
  2197  04D5                     u811:
  2198  04D5  2CDB               	goto	l1345
  2199  04D6                     u810:
  2200  04D6                     l1343:
  2201  04D6  09F7               	comf	___awdiv@quotient,f
  2202  04D7  09F8               	comf	___awdiv@quotient+1,f
  2203  04D8  0AF7               	incf	___awdiv@quotient,f
  2204  04D9  1903               	skipnz
  2205  04DA  0AF8               	incf	___awdiv@quotient+1,f
  2206  04DB                     l1345:
  2207  04DB  0878               	movf	___awdiv@quotient+1,w
  2208  04DC  00F1               	movwf	?___awdiv+1
  2209  04DD  0877               	movf	___awdiv@quotient,w
  2210  04DE  00F0               	movwf	?___awdiv
  2211  04DF                     l434:
  2212  04DF  0008               	return
  2213  04E0                     __end_of___awdiv:
  2214                           
  2215                           	psect	text7
  2216  0390                     __ptext7:	
  2217 ;; *************** function _UART_Write_String *****************
  2218 ;; Defined at:
  2219 ;;		line 28 in file "USART.c"
  2220 ;; Parameters:    Size  Location     Type
  2221 ;;  buf             1    wreg     PTR unsigned char 
  2222 ;;		 -> MPU6050_Read@buffer(40), 
  2223 ;; Auto vars:     Size  Location     Type
  2224 ;;  buf             1    4[COMMON] PTR unsigned char 
  2225 ;;		 -> MPU6050_Read@buffer(40), 
  2226 ;;  i               2    2[COMMON] int 
  2227 ;; Return value:  Size  Location     Type
  2228 ;;                  1    wreg      void 
  2229 ;; Registers used:
  2230 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2231 ;; Tracked objects:
  2232 ;;		On entry : 0/0
  2233 ;;		On exit  : 0/0
  2234 ;;		Unchanged: 0/0
  2235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2236 ;;      Params:         0       0       0       0       0
  2237 ;;      Locals:         3       0       0       0       0
  2238 ;;      Temps:          1       0       0       0       0
  2239 ;;      Totals:         4       0       0       0       0
  2240 ;;Total ram usage:        4 bytes
  2241 ;; Hardware stack levels used:    1
  2242 ;; Hardware stack levels required when called:    1
  2243 ;; This function calls:
  2244 ;;		_UART_Write
  2245 ;; This function is called by:
  2246 ;;		_MPU6050_Read
  2247 ;; This function uses a non-reentrant model
  2248 ;;
  2249                           
  2250                           
  2251                           ;psect for function _UART_Write_String
  2252  0390                     _UART_Write_String:
  2253                           
  2254                           ;incstack = 0
  2255                           ; Regs used in _UART_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2256                           ;UART_Write_String@buf stored from wreg
  2257  0390  00F4               	movwf	UART_Write_String@buf
  2258  0391                     l1213:
  2259                           
  2260                           ;USART.c: 28: void UART_Write_String(char* buf);USART.c: 29: {;USART.c: 30:     int i=0;
  2261  0391  01F2               	clrf	UART_Write_String@i
  2262  0392  01F3               	clrf	UART_Write_String@i+1
  2263                           
  2264                           ;USART.c: 31:     while(buf[i] != '\0')
  2265  0393  2BA5               	goto	l1219
  2266  0394                     l1215:
  2267                           
  2268                           ;USART.c: 32:         UART_Write(buf[i++]);
  2269  0394  0872               	movf	UART_Write_String@i,w
  2270  0395  0774               	addwf	UART_Write_String@buf,w
  2271  0396  00F1               	movwf	??_UART_Write_String
  2272  0397  0871               	movf	??_UART_Write_String,w
  2273  0398  0084               	movwf	4
  2274  0399  0800               	movf	0,w
  2275  039A  120A  118A  233B  120A  118A  	fcall	_UART_Write
  2276  039F                     l1217:
  2277  039F  3001               	movlw	1
  2278  03A0  07F2               	addwf	UART_Write_String@i,f
  2279  03A1  1803               	skipnc
  2280  03A2  0AF3               	incf	UART_Write_String@i+1,f
  2281  03A3  3000               	movlw	0
  2282  03A4  07F3               	addwf	UART_Write_String@i+1,f
  2283  03A5                     l1219:
  2284                           
  2285                           ;USART.c: 31:     while(buf[i] != '\0')
  2286  03A5  0872               	movf	UART_Write_String@i,w
  2287  03A6  0774               	addwf	UART_Write_String@buf,w
  2288  03A7  00F1               	movwf	??_UART_Write_String
  2289  03A8  0871               	movf	??_UART_Write_String,w
  2290  03A9  0084               	movwf	4
  2291  03AA  1383               	bcf	3,7	;select IRP bank0
  2292  03AB  0800               	movf	0,w
  2293  03AC  1D03               	btfss	3,2
  2294  03AD  2BAF               	goto	u611
  2295  03AE  2BB0               	goto	u610
  2296  03AF                     u611:
  2297  03AF  2B94               	goto	l1215
  2298  03B0                     u610:
  2299  03B0                     l53:
  2300  03B0  0008               	return
  2301  03B1                     __end_of_UART_Write_String:
  2302                           
  2303                           	psect	text8
  2304  033B                     __ptext8:	
  2305 ;; *************** function _UART_Write *****************
  2306 ;; Defined at:
  2307 ;;		line 22 in file "USART.c"
  2308 ;; Parameters:    Size  Location     Type
  2309 ;;  data            1    wreg     unsigned char 
  2310 ;; Auto vars:     Size  Location     Type
  2311 ;;  data            1    0[COMMON] unsigned char 
  2312 ;; Return value:  Size  Location     Type
  2313 ;;                  1    wreg      void 
  2314 ;; Registers used:
  2315 ;;		wreg
  2316 ;; Tracked objects:
  2317 ;;		On entry : 0/0
  2318 ;;		On exit  : 0/0
  2319 ;;		Unchanged: 0/0
  2320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2321 ;;      Params:         0       0       0       0       0
  2322 ;;      Locals:         1       0       0       0       0
  2323 ;;      Temps:          0       0       0       0       0
  2324 ;;      Totals:         1       0       0       0       0
  2325 ;;Total ram usage:        1 bytes
  2326 ;; Hardware stack levels used:    1
  2327 ;; This function calls:
  2328 ;;		Nothing
  2329 ;; This function is called by:
  2330 ;;		_UART_Write_String
  2331 ;; This function uses a non-reentrant model
  2332 ;;
  2333                           
  2334                           
  2335                           ;psect for function _UART_Write
  2336  033B                     _UART_Write:
  2337                           
  2338                           ;incstack = 0
  2339                           ; Regs used in _UART_Write: [wreg]
  2340                           ;UART_Write@data stored from wreg
  2341  033B  00F0               	movwf	UART_Write@data
  2342  033C                     l1153:
  2343  033C                     l44:	
  2344                           ;USART.c: 22: void UART_Write(unsigned char data);USART.c: 23: {;USART.c: 24:   while(!T
      +                          RMT);
  2345                           
  2346  033C  1683               	bsf	3,5	;RP0=1, select bank1
  2347  033D  1303               	bcf	3,6	;RP1=0, select bank1
  2348  033E  1C98               	btfss	24,1	;volatile
  2349  033F  2B41               	goto	u441
  2350  0340  2B42               	goto	u440
  2351  0341                     u441:
  2352  0341  2B3C               	goto	l44
  2353  0342                     u440:
  2354  0342                     l1155:
  2355                           
  2356                           ;USART.c: 25:   TXREG = data;
  2357  0342  0870               	movf	UART_Write@data,w
  2358  0343  1283               	bcf	3,5	;RP0=0, select bank0
  2359  0344  1303               	bcf	3,6	;RP1=0, select bank0
  2360  0345  0099               	movwf	25	;volatile
  2361  0346                     l47:
  2362  0346  0008               	return
  2363  0347                     __end_of_UART_Write:
  2364                           
  2365                           	psect	text9
  2366  03D4                     __ptext9:	
  2367 ;; *************** function _I2C_Read *****************
  2368 ;; Defined at:
  2369 ;;		line 83 in file "I2C.c"
  2370 ;; Parameters:    Size  Location     Type
  2371 ;;  ACK_NACK        1    wreg     unsigned char 
  2372 ;; Auto vars:     Size  Location     Type
  2373 ;;  ACK_NACK        1    1[COMMON] unsigned char 
  2374 ;;  Data            1    2[COMMON] unsigned char 
  2375 ;; Return value:  Size  Location     Type
  2376 ;;                  1    wreg      unsigned char 
  2377 ;; Registers used:
  2378 ;;		wreg, status,2, status,0, pclath, cstack
  2379 ;; Tracked objects:
  2380 ;;		On entry : 0/0
  2381 ;;		On exit  : 0/0
  2382 ;;		Unchanged: 0/0
  2383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2384 ;;      Params:         0       0       0       0       0
  2385 ;;      Locals:         2       0       0       0       0
  2386 ;;      Temps:          1       0       0       0       0
  2387 ;;      Totals:         3       0       0       0       0
  2388 ;;Total ram usage:        3 bytes
  2389 ;; Hardware stack levels used:    1
  2390 ;; Hardware stack levels required when called:    1
  2391 ;; This function calls:
  2392 ;;		_I2C_ACK
  2393 ;;		_I2C_NACK
  2394 ;; This function is called by:
  2395 ;;		_MPU6050_Read
  2396 ;; This function uses a non-reentrant model
  2397 ;;
  2398                           
  2399                           
  2400                           ;psect for function _I2C_Read
  2401  03D4                     _I2C_Read:
  2402                           
  2403                           ;incstack = 0
  2404                           ; Regs used in _I2C_Read: [wreg+status,2+status,0+pclath+cstack]
  2405                           ;I2C_Read@ACK_NACK stored from wreg
  2406  03D4  00F1               	movwf	I2C_Read@ACK_NACK
  2407  03D5                     l1229:
  2408                           
  2409                           ;I2C.c: 83: unsigned char I2C_Read(unsigned char ACK_NACK);I2C.c: 84: {;I2C.c: 86:     u
      +                          nsigned char Data;;I2C.c: 87:     RCEN = 1;
  2410  03D5  1683               	bsf	3,5	;RP0=1, select bank1
  2411  03D6  1303               	bcf	3,6	;RP1=0, select bank1
  2412  03D7  1591               	bsf	17,3	;volatile
  2413  03D8                     l135:	
  2414                           ;I2C.c: 88:     while(!BF);
  2415                           
  2416  03D8  1C14               	btfss	20,0	;volatile
  2417  03D9  2BDB               	goto	u621
  2418  03DA  2BDC               	goto	u620
  2419  03DB                     u621:
  2420  03DB  2BD8               	goto	l135
  2421  03DC                     u620:
  2422  03DC                     l1231:
  2423                           
  2424                           ;I2C.c: 89:     Data = SSPBUF;
  2425  03DC  1283               	bcf	3,5	;RP0=0, select bank0
  2426  03DD  1303               	bcf	3,6	;RP1=0, select bank0
  2427  03DE  0813               	movf	19,w	;volatile
  2428  03DF  00F0               	movwf	??_I2C_Read
  2429  03E0  0870               	movf	??_I2C_Read,w
  2430  03E1  00F2               	movwf	I2C_Read@Data
  2431  03E2                     l1233:
  2432                           
  2433                           ;I2C.c: 90:     if(ACK_NACK==0)
  2434  03E2  0871               	movf	I2C_Read@ACK_NACK,w
  2435  03E3  1D03               	btfss	3,2
  2436  03E4  2BE6               	goto	u631
  2437  03E5  2BE7               	goto	u630
  2438  03E6                     u631:
  2439  03E6  2BED               	goto	l1237
  2440  03E7                     u630:
  2441  03E7                     l1235:
  2442                           
  2443                           ;I2C.c: 91:         I2C_ACK();
  2444  03E7  120A  118A  2329  120A  118A  	fcall	_I2C_ACK
  2445  03EC  2BF2               	goto	l140
  2446  03ED                     l1237:
  2447                           
  2448                           ;I2C.c: 93:         I2C_NACK();
  2449  03ED  120A  118A  2332  120A  118A  	fcall	_I2C_NACK
  2450  03F2                     l140:
  2451  03F2  1283               	bcf	3,5	;RP0=0, select bank0
  2452  03F3  1303               	bcf	3,6	;RP1=0, select bank0
  2453  03F4  1D8C               	btfss	12,3	;volatile
  2454  03F5  2BF7               	goto	u641
  2455  03F6  2BF8               	goto	u640
  2456  03F7                     u641:
  2457  03F7  2BF2               	goto	l140
  2458  03F8                     u640:
  2459  03F8                     l142:
  2460                           
  2461                           ;I2C.c: 95:     SSPIF=0;
  2462  03F8  118C               	bcf	12,3	;volatile
  2463  03F9                     l1239:
  2464                           
  2465                           ;I2C.c: 96:     return Data;
  2466  03F9  0872               	movf	I2C_Read@Data,w
  2467  03FA                     l143:
  2468  03FA  0008               	return
  2469  03FB                     __end_of_I2C_Read:
  2470                           
  2471                           	psect	text10
  2472  0332                     __ptext10:	
  2473 ;; *************** function _I2C_NACK *****************
  2474 ;; Defined at:
  2475 ;;		line 56 in file "I2C.c"
  2476 ;; Parameters:    Size  Location     Type
  2477 ;;		None
  2478 ;; Auto vars:     Size  Location     Type
  2479 ;;		None
  2480 ;; Return value:  Size  Location     Type
  2481 ;;                  1    wreg      void 
  2482 ;; Registers used:
  2483 ;;		None
  2484 ;; Tracked objects:
  2485 ;;		On entry : 0/0
  2486 ;;		On exit  : 0/0
  2487 ;;		Unchanged: 0/0
  2488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2489 ;;      Params:         0       0       0       0       0
  2490 ;;      Locals:         0       0       0       0       0
  2491 ;;      Temps:          0       0       0       0       0
  2492 ;;      Totals:         0       0       0       0       0
  2493 ;;Total ram usage:        0 bytes
  2494 ;; Hardware stack levels used:    1
  2495 ;; This function calls:
  2496 ;;		Nothing
  2497 ;; This function is called by:
  2498 ;;		_I2C_Read
  2499 ;; This function uses a non-reentrant model
  2500 ;;
  2501                           
  2502                           
  2503                           ;psect for function _I2C_NACK
  2504  0332                     _I2C_NACK:
  2505  0332                     l1163:	
  2506                           ;incstack = 0
  2507                           ; Regs used in _I2C_NACK: []
  2508                           
  2509                           
  2510                           ;I2C.c: 58:  ACKDT = 1;
  2511  0332  1683               	bsf	3,5	;RP0=1, select bank1
  2512  0333  1303               	bcf	3,6	;RP1=0, select bank1
  2513  0334  1691               	bsf	17,5	;volatile
  2514                           
  2515                           ;I2C.c: 59:  ACKEN = 1;
  2516  0335  1611               	bsf	17,4	;volatile
  2517  0336                     l117:	
  2518                           ;I2C.c: 60:     while(ACKEN);
  2519                           
  2520  0336  1A11               	btfsc	17,4	;volatile
  2521  0337  2B39               	goto	u471
  2522  0338  2B3A               	goto	u470
  2523  0339                     u471:
  2524  0339  2B36               	goto	l117
  2525  033A                     u470:
  2526  033A                     l120:
  2527  033A  0008               	return
  2528  033B                     __end_of_I2C_NACK:
  2529                           
  2530                           	psect	text11
  2531  0329                     __ptext11:	
  2532 ;; *************** function _I2C_ACK *****************
  2533 ;; Defined at:
  2534 ;;		line 49 in file "I2C.c"
  2535 ;; Parameters:    Size  Location     Type
  2536 ;;		None
  2537 ;; Auto vars:     Size  Location     Type
  2538 ;;		None
  2539 ;; Return value:  Size  Location     Type
  2540 ;;                  1    wreg      void 
  2541 ;; Registers used:
  2542 ;;		None
  2543 ;; Tracked objects:
  2544 ;;		On entry : 0/0
  2545 ;;		On exit  : 0/0
  2546 ;;		Unchanged: 0/0
  2547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2548 ;;      Params:         0       0       0       0       0
  2549 ;;      Locals:         0       0       0       0       0
  2550 ;;      Temps:          0       0       0       0       0
  2551 ;;      Totals:         0       0       0       0       0
  2552 ;;Total ram usage:        0 bytes
  2553 ;; Hardware stack levels used:    1
  2554 ;; This function calls:
  2555 ;;		Nothing
  2556 ;; This function is called by:
  2557 ;;		_I2C_Read
  2558 ;; This function uses a non-reentrant model
  2559 ;;
  2560                           
  2561                           
  2562                           ;psect for function _I2C_ACK
  2563  0329                     _I2C_ACK:
  2564  0329                     l1161:	
  2565                           ;incstack = 0
  2566                           ; Regs used in _I2C_ACK: []
  2567                           
  2568                           
  2569                           ;I2C.c: 51:  ACKDT = 0;
  2570  0329  1683               	bsf	3,5	;RP0=1, select bank1
  2571  032A  1303               	bcf	3,6	;RP1=0, select bank1
  2572  032B  1291               	bcf	17,5	;volatile
  2573                           
  2574                           ;I2C.c: 52:     ACKEN = 1;
  2575  032C  1611               	bsf	17,4	;volatile
  2576  032D                     l111:	
  2577                           ;I2C.c: 53:     while(ACKEN);
  2578                           
  2579  032D  1A11               	btfsc	17,4	;volatile
  2580  032E  2B30               	goto	u461
  2581  032F  2B31               	goto	u460
  2582  0330                     u461:
  2583  0330  2B2D               	goto	l111
  2584  0331                     u460:
  2585  0331                     l114:
  2586  0331  0008               	return
  2587  0332                     __end_of_I2C_ACK:
  2588                           
  2589                           	psect	text12
  2590  04E0                     __ptext12:	
  2591 ;; *************** function _MPU6050_Init *****************
  2592 ;; Defined at:
  2593 ;;		line 11 in file "MPU6050.c"
  2594 ;; Parameters:    Size  Location     Type
  2595 ;;		None
  2596 ;; Auto vars:     Size  Location     Type
  2597 ;;		None
  2598 ;; Return value:  Size  Location     Type
  2599 ;;                  1    wreg      void 
  2600 ;; Registers used:
  2601 ;;		wreg, status,2, status,0, pclath, cstack
  2602 ;; Tracked objects:
  2603 ;;		On entry : 0/0
  2604 ;;		On exit  : 0/0
  2605 ;;		Unchanged: 0/0
  2606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2607 ;;      Params:         0       0       0       0       0
  2608 ;;      Locals:         0       0       0       0       0
  2609 ;;      Temps:          3       0       0       0       0
  2610 ;;      Totals:         3       0       0       0       0
  2611 ;;Total ram usage:        3 bytes
  2612 ;; Hardware stack levels used:    1
  2613 ;; Hardware stack levels required when called:    3
  2614 ;; This function calls:
  2615 ;;		_I2C_Master_Init
  2616 ;;		_I2C_Master_Stop
  2617 ;;		_I2C_Master_Write
  2618 ;;		_I2C_Start
  2619 ;; This function is called by:
  2620 ;;		_main
  2621 ;; This function uses a non-reentrant model
  2622 ;;
  2623                           
  2624                           
  2625                           ;psect for function _MPU6050_Init
  2626  04E0                     _MPU6050_Init:
  2627  04E0                     l1349:	
  2628                           ;incstack = 0
  2629                           ; Regs used in _MPU6050_Init: [wreg+status,2+status,0+pclath+cstack]
  2630                           
  2631                           
  2632                           ;MPU6050.c: 14:   _delay((unsigned long)((100)*(8000000/4000.0)));
  2633  04E0  3002               	movlw	2
  2634  04E1  00F4               	movwf	??_MPU6050_Init+2
  2635  04E2  3004               	movlw	4
  2636  04E3  00F3               	movwf	??_MPU6050_Init+1
  2637  04E4  30BA               	movlw	186
  2638  04E5  00F2               	movwf	??_MPU6050_Init
  2639  04E6                     u847:
  2640  04E6  0BF2               	decfsz	??_MPU6050_Init,f
  2641  04E7  2CE6               	goto	u847
  2642  04E8  0BF3               	decfsz	??_MPU6050_Init+1,f
  2643  04E9  2CE6               	goto	u847
  2644  04EA  0BF4               	decfsz	??_MPU6050_Init+2,f
  2645  04EB  2CE6               	goto	u847
  2646  04EC  0000               	nop
  2647  04ED                     l1351:
  2648                           
  2649                           ;MPU6050.c: 15:   I2C_Master_Init();
  2650  04ED  120A  118A  2347  120A  118A  	fcall	_I2C_Master_Init
  2651  04F2                     l1353:
  2652                           
  2653                           ;MPU6050.c: 18:   I2C_Start(0xD0);
  2654  04F2  30D0               	movlw	208
  2655  04F3  120A  118A  2380  120A  118A  	fcall	_I2C_Start
  2656  04F8                     l1355:
  2657                           
  2658                           ;MPU6050.c: 19:   I2C_Master_Write(0x19);
  2659  04F8  3019               	movlw	25
  2660  04F9  120A  118A  2370  120A  118A  	fcall	_I2C_Master_Write
  2661  04FE                     l1357:
  2662                           
  2663                           ;MPU6050.c: 20:   I2C_Master_Write(0x07);
  2664  04FE  3007               	movlw	7
  2665  04FF  120A  118A  2370  120A  118A  	fcall	_I2C_Master_Write
  2666  0504                     l1359:
  2667                           
  2668                           ;MPU6050.c: 21:   I2C_Master_Stop();
  2669  0504  120A  118A  2320  120A  118A  	fcall	_I2C_Master_Stop
  2670  0509                     l1361:
  2671                           
  2672                           ;MPU6050.c: 24:   I2C_Start(0xD0);
  2673  0509  30D0               	movlw	208
  2674  050A  120A  118A  2380  120A  118A  	fcall	_I2C_Start
  2675  050F                     l1363:
  2676                           
  2677                           ;MPU6050.c: 25:   I2C_Master_Write(0x6B);
  2678  050F  306B               	movlw	107
  2679  0510  120A  118A  2370  120A  118A  	fcall	_I2C_Master_Write
  2680  0515                     l1365:
  2681                           
  2682                           ;MPU6050.c: 26:   I2C_Master_Write(0x01);
  2683  0515  3001               	movlw	1
  2684  0516  120A  118A  2370  120A  118A  	fcall	_I2C_Master_Write
  2685  051B                     l1367:
  2686                           
  2687                           ;MPU6050.c: 27:   I2C_Master_Stop();
  2688  051B  120A  118A  2320  120A  118A  	fcall	_I2C_Master_Stop
  2689  0520                     l1369:
  2690                           
  2691                           ;MPU6050.c: 30:   I2C_Start(0xD0);
  2692  0520  30D0               	movlw	208
  2693  0521  120A  118A  2380  120A  118A  	fcall	_I2C_Start
  2694  0526                     l1371:
  2695                           
  2696                           ;MPU6050.c: 31:   I2C_Master_Write(0x1A);
  2697  0526  301A               	movlw	26
  2698  0527  120A  118A  2370  120A  118A  	fcall	_I2C_Master_Write
  2699  052C                     l1373:
  2700                           
  2701                           ;MPU6050.c: 32:   I2C_Master_Write(0x00);
  2702  052C  3000               	movlw	0
  2703  052D  120A  118A  2370  120A  118A  	fcall	_I2C_Master_Write
  2704  0532                     l1375:
  2705                           
  2706                           ;MPU6050.c: 33:   I2C_Master_Stop();
  2707  0532  120A  118A  2320  120A  118A  	fcall	_I2C_Master_Stop
  2708  0537                     l1377:
  2709                           
  2710                           ;MPU6050.c: 36:   I2C_Start(0xD0);
  2711  0537  30D0               	movlw	208
  2712  0538  120A  118A  2380  120A  118A  	fcall	_I2C_Start
  2713  053D                     l1379:
  2714                           
  2715                           ;MPU6050.c: 37:   I2C_Master_Write(0x1C);
  2716  053D  301C               	movlw	28
  2717  053E  120A  118A  2370  120A  118A  	fcall	_I2C_Master_Write
  2718  0543                     l1381:
  2719                           
  2720                           ;MPU6050.c: 38:   I2C_Master_Write(0x00);
  2721  0543  3000               	movlw	0
  2722  0544  120A  118A  2370  120A  118A  	fcall	_I2C_Master_Write
  2723  0549                     l1383:
  2724                           
  2725                           ;MPU6050.c: 39:   I2C_Master_Stop();
  2726  0549  120A  118A  2320  120A  118A  	fcall	_I2C_Master_Stop
  2727  054E                     l1385:
  2728                           
  2729                           ;MPU6050.c: 42:   I2C_Start(0xD0);
  2730  054E  30D0               	movlw	208
  2731  054F  120A  118A  2380  120A  118A  	fcall	_I2C_Start
  2732  0554                     l1387:
  2733                           
  2734                           ;MPU6050.c: 43:   I2C_Master_Write(0x1B);
  2735  0554  301B               	movlw	27
  2736  0555  120A  118A  2370  120A  118A  	fcall	_I2C_Master_Write
  2737  055A                     l1389:
  2738                           
  2739                           ;MPU6050.c: 44:   I2C_Master_Write(0x18);
  2740  055A  3018               	movlw	24
  2741  055B  120A  118A  2370  120A  118A  	fcall	_I2C_Master_Write
  2742  0560                     l1391:
  2743                           
  2744                           ;MPU6050.c: 45:   I2C_Master_Stop();
  2745  0560  120A  118A  2320  120A  118A  	fcall	_I2C_Master_Stop
  2746  0565                     l1393:
  2747                           
  2748                           ;MPU6050.c: 48:   I2C_Start(0xD0);
  2749  0565  30D0               	movlw	208
  2750  0566  120A  118A  2380  120A  118A  	fcall	_I2C_Start
  2751  056B                     l1395:
  2752                           
  2753                           ;MPU6050.c: 49:   I2C_Master_Write(0x38);
  2754  056B  3038               	movlw	56
  2755  056C  120A  118A  2370  120A  118A  	fcall	_I2C_Master_Write
  2756  0571                     l1397:
  2757                           
  2758                           ;MPU6050.c: 50:   I2C_Master_Write(0x01);
  2759  0571  3001               	movlw	1
  2760  0572  120A  118A  2370  120A  118A  	fcall	_I2C_Master_Write
  2761  0577                     l1399:
  2762                           
  2763                           ;MPU6050.c: 51:   I2C_Master_Stop();
  2764  0577  120A  118A  2320  120A  118A  	fcall	_I2C_Master_Stop
  2765  057C                     l164:
  2766  057C  0008               	return
  2767  057D                     __end_of_MPU6050_Init:
  2768                           
  2769                           	psect	text13
  2770  0380                     __ptext13:	
  2771 ;; *************** function _I2C_Start *****************
  2772 ;; Defined at:
  2773 ;;		line 30 in file "I2C.c"
  2774 ;; Parameters:    Size  Location     Type
  2775 ;;  add             1    wreg     unsigned char 
  2776 ;; Auto vars:     Size  Location     Type
  2777 ;;  add             1    1[COMMON] unsigned char 
  2778 ;; Return value:  Size  Location     Type
  2779 ;;                  1    wreg      void 
  2780 ;; Registers used:
  2781 ;;		wreg, status,2, status,0, pclath, cstack
  2782 ;; Tracked objects:
  2783 ;;		On entry : 0/0
  2784 ;;		On exit  : 0/0
  2785 ;;		Unchanged: 0/0
  2786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2787 ;;      Params:         0       0       0       0       0
  2788 ;;      Locals:         1       0       0       0       0
  2789 ;;      Temps:          0       0       0       0       0
  2790 ;;      Totals:         1       0       0       0       0
  2791 ;;Total ram usage:        1 bytes
  2792 ;; Hardware stack levels used:    1
  2793 ;; Hardware stack levels required when called:    2
  2794 ;; This function calls:
  2795 ;;		_I2C_Master_Wait
  2796 ;;		_I2C_Master_Write
  2797 ;; This function is called by:
  2798 ;;		_MPU6050_Init
  2799 ;;		_MPU6050_Read
  2800 ;; This function uses a non-reentrant model
  2801 ;;
  2802                           
  2803                           
  2804                           ;psect for function _I2C_Start
  2805  0380                     _I2C_Start:
  2806                           
  2807                           ;incstack = 0
  2808                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  2809                           ;I2C_Start@add stored from wreg
  2810  0380  00F1               	movwf	I2C_Start@add
  2811  0381                     l1221:
  2812                           
  2813                           ;I2C.c: 30: void I2C_Start(char add);I2C.c: 31: {;I2C.c: 32:     I2C_Master_Wait();
  2814  0381  120A  118A  2354  120A  118A  	fcall	_I2C_Master_Wait
  2815  0386                     l1223:
  2816                           
  2817                           ;I2C.c: 33:     SEN = 1;
  2818  0386  1683               	bsf	3,5	;RP0=1, select bank1
  2819  0387  1303               	bcf	3,6	;RP1=0, select bank1
  2820  0388  1411               	bsf	17,0	;volatile
  2821                           
  2822                           ;I2C.c: 34:     I2C_Master_Write(add);
  2823  0389  0871               	movf	I2C_Start@add,w
  2824  038A  120A  118A  2370  120A  118A  	fcall	_I2C_Master_Write
  2825  038F                     l102:
  2826  038F  0008               	return
  2827  0390                     __end_of_I2C_Start:
  2828                           
  2829                           	psect	text14
  2830  0370                     __ptext14:	
  2831 ;; *************** function _I2C_Master_Write *****************
  2832 ;; Defined at:
  2833 ;;		line 63 in file "I2C.c"
  2834 ;; Parameters:    Size  Location     Type
  2835 ;;  data            1    wreg     unsigned char 
  2836 ;; Auto vars:     Size  Location     Type
  2837 ;;  data            1    0[COMMON] unsigned char 
  2838 ;; Return value:  Size  Location     Type
  2839 ;;                  1    wreg      unsigned char 
  2840 ;; Registers used:
  2841 ;;		wreg, status,2, status,0, pclath, cstack
  2842 ;; Tracked objects:
  2843 ;;		On entry : 0/0
  2844 ;;		On exit  : 0/0
  2845 ;;		Unchanged: 0/0
  2846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2847 ;;      Params:         0       0       0       0       0
  2848 ;;      Locals:         1       0       0       0       0
  2849 ;;      Temps:          0       0       0       0       0
  2850 ;;      Totals:         1       0       0       0       0
  2851 ;;Total ram usage:        1 bytes
  2852 ;; Hardware stack levels used:    1
  2853 ;; Hardware stack levels required when called:    1
  2854 ;; This function calls:
  2855 ;;		_I2C_Master_Wait
  2856 ;; This function is called by:
  2857 ;;		_I2C_Start
  2858 ;;		_MPU6050_Init
  2859 ;;		_MPU6050_Read
  2860 ;; This function uses a non-reentrant model
  2861 ;;
  2862                           
  2863                           
  2864                           ;psect for function _I2C_Master_Write
  2865  0370                     _I2C_Master_Write:
  2866                           
  2867                           ;incstack = 0
  2868                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2869                           ;I2C_Master_Write@data stored from wreg
  2870  0370  00F0               	movwf	I2C_Master_Write@data
  2871  0371                     l1157:
  2872                           
  2873                           ;I2C.c: 63: unsigned char I2C_Master_Write(unsigned char data);I2C.c: 64: {;I2C.c: 65:  
      +                             I2C_Master_Wait();
  2874  0371  120A  118A  2354  120A  118A  	fcall	_I2C_Master_Wait
  2875  0376                     l1159:
  2876                           
  2877                           ;I2C.c: 66:     SSPBUF = data;
  2878  0376  0870               	movf	I2C_Master_Write@data,w
  2879  0377  1283               	bcf	3,5	;RP0=0, select bank0
  2880  0378  1303               	bcf	3,6	;RP1=0, select bank0
  2881  0379  0093               	movwf	19	;volatile
  2882  037A                     l123:	
  2883                           ;I2C.c: 67:     while(!SSPIF);
  2884                           
  2885  037A  1D8C               	btfss	12,3	;volatile
  2886  037B  2B7D               	goto	u451
  2887  037C  2B7E               	goto	u450
  2888  037D                     u451:
  2889  037D  2B7A               	goto	l123
  2890  037E                     u450:
  2891  037E                     l125:
  2892                           
  2893                           ;I2C.c: 68:  SSPIF = 0;
  2894  037E  118C               	bcf	12,3	;volatile
  2895  037F                     l126:	
  2896                           ;I2C.c: 69:     return ACKSTAT;;	Return value of _I2C_Master_Write is never used
  2897                           
  2898  037F  0008               	return
  2899  0380                     __end_of_I2C_Master_Write:
  2900                           
  2901                           	psect	text15
  2902  0320                     __ptext15:	
  2903 ;; *************** function _I2C_Master_Stop *****************
  2904 ;; Defined at:
  2905 ;;		line 43 in file "I2C.c"
  2906 ;; Parameters:    Size  Location     Type
  2907 ;;		None
  2908 ;; Auto vars:     Size  Location     Type
  2909 ;;		None
  2910 ;; Return value:  Size  Location     Type
  2911 ;;                  1    wreg      void 
  2912 ;; Registers used:
  2913 ;;		wreg, status,2, status,0, pclath, cstack
  2914 ;; Tracked objects:
  2915 ;;		On entry : 0/0
  2916 ;;		On exit  : 0/0
  2917 ;;		Unchanged: 0/0
  2918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2919 ;;      Params:         0       0       0       0       0
  2920 ;;      Locals:         0       0       0       0       0
  2921 ;;      Temps:          0       0       0       0       0
  2922 ;;      Totals:         0       0       0       0       0
  2923 ;;Total ram usage:        0 bytes
  2924 ;; Hardware stack levels used:    1
  2925 ;; Hardware stack levels required when called:    1
  2926 ;; This function calls:
  2927 ;;		_I2C_Master_Wait
  2928 ;; This function is called by:
  2929 ;;		_MPU6050_Init
  2930 ;;		_MPU6050_Read
  2931 ;; This function uses a non-reentrant model
  2932 ;;
  2933                           
  2934                           
  2935                           ;psect for function _I2C_Master_Stop
  2936  0320                     _I2C_Master_Stop:
  2937  0320                     l1225:	
  2938                           ;incstack = 0
  2939                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2940                           
  2941                           
  2942                           ;I2C.c: 45:     I2C_Master_Wait();
  2943  0320  120A  118A  2354  120A  118A  	fcall	_I2C_Master_Wait
  2944  0325                     l1227:
  2945                           
  2946                           ;I2C.c: 46:     PEN = 1;
  2947  0325  1683               	bsf	3,5	;RP0=1, select bank1
  2948  0326  1303               	bcf	3,6	;RP1=0, select bank1
  2949  0327  1511               	bsf	17,2	;volatile
  2950  0328                     l108:
  2951  0328  0008               	return
  2952  0329                     __end_of_I2C_Master_Stop:
  2953                           
  2954                           	psect	text16
  2955  0354                     __ptext16:	
  2956 ;; *************** function _I2C_Master_Wait *****************
  2957 ;; Defined at:
  2958 ;;		line 19 in file "I2C.c"
  2959 ;; Parameters:    Size  Location     Type
  2960 ;;		None
  2961 ;; Auto vars:     Size  Location     Type
  2962 ;;		None
  2963 ;; Return value:  Size  Location     Type
  2964 ;;                  1    wreg      void 
  2965 ;; Registers used:
  2966 ;;		wreg, status,2
  2967 ;; Tracked objects:
  2968 ;;		On entry : 0/0
  2969 ;;		On exit  : 0/0
  2970 ;;		Unchanged: 0/0
  2971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2972 ;;      Params:         0       0       0       0       0
  2973 ;;      Locals:         0       0       0       0       0
  2974 ;;      Temps:          0       0       0       0       0
  2975 ;;      Totals:         0       0       0       0       0
  2976 ;;Total ram usage:        0 bytes
  2977 ;; Hardware stack levels used:    1
  2978 ;; This function calls:
  2979 ;;		Nothing
  2980 ;; This function is called by:
  2981 ;;		_I2C_Start
  2982 ;;		_I2C_Master_Stop
  2983 ;;		_I2C_Master_Write
  2984 ;;		_I2C_Master_Start
  2985 ;;		_I2C_Master_RepeatedStart
  2986 ;;		_I2C_Read_Byte
  2987 ;; This function uses a non-reentrant model
  2988 ;;
  2989                           
  2990                           
  2991                           ;psect for function _I2C_Master_Wait
  2992  0354                     _I2C_Master_Wait:
  2993  0354                     l1149:	
  2994                           ;incstack = 0
  2995                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2996                           
  2997  0354                     l93:	
  2998                           ;I2C.c: 21:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2999                           
  3000  0354  1683               	bsf	3,5	;RP0=1, select bank1
  3001  0355  1303               	bcf	3,6	;RP1=0, select bank1
  3002  0356  1914               	btfsc	20,2	;volatile
  3003  0357  2B59               	goto	u421
  3004  0358  2B5A               	goto	u420
  3005  0359                     u421:
  3006  0359  2B54               	goto	l93
  3007  035A                     u420:
  3008  035A                     l1151:
  3009  035A  0811               	movf	17,w	;volatile
  3010  035B  391F               	andlw	31
  3011  035C  1D03               	btfss	3,2
  3012  035D  2B5F               	goto	u431
  3013  035E  2B60               	goto	u430
  3014  035F                     u431:
  3015  035F  2B54               	goto	l93
  3016  0360                     u430:
  3017  0360                     l96:
  3018  0360  0008               	return
  3019  0361                     __end_of_I2C_Master_Wait:
  3020                           
  3021                           	psect	text17
  3022  0347                     __ptext17:	
  3023 ;; *************** function _I2C_Master_Init *****************
  3024 ;; Defined at:
  3025 ;;		line 9 in file "I2C.c"
  3026 ;; Parameters:    Size  Location     Type
  3027 ;;		None
  3028 ;; Auto vars:     Size  Location     Type
  3029 ;;		None
  3030 ;; Return value:  Size  Location     Type
  3031 ;;                  1    wreg      void 
  3032 ;; Registers used:
  3033 ;;		wreg, status,2
  3034 ;; Tracked objects:
  3035 ;;		On entry : 0/0
  3036 ;;		On exit  : 0/0
  3037 ;;		Unchanged: 0/0
  3038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3039 ;;      Params:         0       0       0       0       0
  3040 ;;      Locals:         0       0       0       0       0
  3041 ;;      Temps:          0       0       0       0       0
  3042 ;;      Totals:         0       0       0       0       0
  3043 ;;Total ram usage:        0 bytes
  3044 ;; Hardware stack levels used:    1
  3045 ;; This function calls:
  3046 ;;		Nothing
  3047 ;; This function is called by:
  3048 ;;		_MPU6050_Init
  3049 ;; This function uses a non-reentrant model
  3050 ;;
  3051                           
  3052                           
  3053                           ;psect for function _I2C_Master_Init
  3054  0347                     _I2C_Master_Init:
  3055  0347                     l859:	
  3056                           ;incstack = 0
  3057                           ; Regs used in _I2C_Master_Init: [wreg+status,2]
  3058                           
  3059                           
  3060                           ;I2C.c: 11:   SSPCON = 0x28;
  3061  0347  3028               	movlw	40
  3062  0348  1283               	bcf	3,5	;RP0=0, select bank0
  3063  0349  1303               	bcf	3,6	;RP1=0, select bank0
  3064  034A  0094               	movwf	20	;volatile
  3065  034B                     l861:
  3066                           
  3067                           ;I2C.c: 12:   SSPCON2 = 0x00;
  3068  034B  1683               	bsf	3,5	;RP0=1, select bank1
  3069  034C  1303               	bcf	3,6	;RP1=0, select bank1
  3070  034D  0191               	clrf	17	;volatile
  3071  034E                     l863:
  3072                           
  3073                           ;I2C.c: 13:   SSPSTAT = 0x00;
  3074  034E  0194               	clrf	20	;volatile
  3075                           
  3076                           ;I2C.c: 14:   SSPADD = ((8000000/4)/9600) - 1;
  3077  034F  30CF               	movlw	207
  3078  0350  0093               	movwf	19	;volatile
  3079  0351                     l865:
  3080                           
  3081                           ;I2C.c: 15:   TRISC3 = 1;
  3082  0351  1587               	bsf	7,3	;volatile
  3083  0352                     l867:
  3084                           
  3085                           ;I2C.c: 16:   TRISC4 = 1;
  3086  0352  1607               	bsf	7,4	;volatile
  3087  0353                     l90:
  3088  0353  0008               	return
  3089  0354                     __end_of_I2C_Master_Init:
  3090  007E                     btemp	set	126	;btemp
  3091  007E                     wtemp0	set	126
  3092                           
  3093                           	psect	config
  3094                           
  3095                           ;Config register CONFIG1 @ 0x2007
  3096                           ;	Oscillator Selection bits
  3097                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  3098                           ;	Watchdog Timer Enable bit
  3099                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3100                           ;	Power-up Timer Enable bit
  3101                           ;	PWRTE = OFF, PWRT disabled
  3102                           ;	RE3/MCLR pin function select bit
  3103                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3104                           ;	Code Protection bit
  3105                           ;	CP = OFF, Program memory code protection is disabled
  3106                           ;	Data Code Protection bit
  3107                           ;	CPD = OFF, Data memory code protection is disabled
  3108                           ;	Brown Out Reset Selection bits
  3109                           ;	BOREN = OFF, BOR disabled
  3110                           ;	Internal External Switchover bit
  3111                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3112                           ;	Fail-Safe Clock Monitor Enabled bit
  3113                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3114                           ;	Low Voltage Programming Enable bit
  3115                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3116                           ;	In-Circuit Debugger Mode bit
  3117                           ;	DEBUG = 0x1, unprogrammed default
  3118  2007                     	org	8199
  3119  2007  20D5               	dw	8405
  3120                           
  3121                           ;Config register CONFIG2 @ 0x2008
  3122                           ;	Brown-out Reset Selection bit
  3123                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3124                           ;	Flash Program Memory Self Write Enable bits
  3125                           ;	WRT = OFF, Write protection off
  3126  2008                     	org	8200
  3127  2008  3FFF               	dw	16383

Data Sizes:
    Strings     85
    Constant    10
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     73      73
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_7(CODE[11]), STR_6(CODE[13]), STR_5(CODE[13]), STR_4(CODE[10]), 
		 -> STR_3(CODE[13]), STR_2(CODE[13]), STR_1(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 40
		 -> MPU6050_Read@buffer(BANK0[40]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    UART_Write_String@buf	PTR unsigned char  size(1) Largest target is 40
		 -> MPU6050_Read@buffer(BANK0[40]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _UART_Write_String->_UART_Write
    _MPU6050_Init->_I2C_Start
    _I2C_Start->_I2C_Master_Write

Critical Paths under _main in BANK0

    _main->_MPU6050_Read
    _MPU6050_Read->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3338
                                             71 BANK0      2     2      0
                       _MPU6050_Init
                       _MPU6050_Read
                       _UART_TX_Init
 ---------------------------------------------------------------------------------
 (1) _UART_TX_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Read                                        58    58      0    3272
                                             13 BANK0     58    58      0
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _I2C_Read
                          _I2C_Start
                  _UART_Write_String
                            ___awdiv
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    1865
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _UART_Write_String                                    4     4      0     343
                                              1 COMMON     4     4      0
                         _UART_Write
 ---------------------------------------------------------------------------------
 (3) _UART_Write                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             3     3      0      45
                                              0 COMMON     3     3      0
                            _I2C_ACK
                           _I2C_NACK
 ---------------------------------------------------------------------------------
 (3) _I2C_NACK                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_ACK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Init                                         3     3      0      66
                                              2 COMMON     3     3      0
                    _I2C_Master_Init
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _I2C_Start
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            1     1      0      44
                                              1 COMMON     1     1      0
                    _I2C_Master_Wait
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     1     1      0      22
                                              0 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MPU6050_Init
     _I2C_Master_Init
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _I2C_Start
       _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _MPU6050_Read
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _I2C_Read
       _I2C_ACK
       _I2C_NACK
     _I2C_Start
       _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _UART_Write_String
       _UART_Write
     ___awdiv
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _UART_TX_Init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     49      49       5       91.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Mar 11 00:32:24 2021

                         pc 0002          __size_of_I2C_Start 0010                          _BF 04A0  
                        l41 036F                          l44 033C                          l53 03B0  
                        l47 0346                          l90 0353                          l93 0354  
                        l96 0360                ___awdiv@sign 0076                          fsr 0004  
__size_of_UART_Write_String 0021                         l102 038F                         l111 032D  
                       l120 033A                         l114 0331                         l123 037A  
                       l108 0328                         l140 03F2                         l125 037E  
                       l117 0336                         l126 037F                         l142 03F8  
                       l143 03FA                         l135 03D8                         l164 057C  
                       l167 07FB                         l434 04DF                         l277 0664  
                       l553 0478                         l563 0434                         l861 034B  
                       l863 034E                         l865 0351                         l867 0352  
                       l859 0347                         l997 0361                         l999 0364  
                       u420 035A                         u500 044F                         u421 0359  
                       u501 044E                         u430 0360                         u431 035F  
                       u440 0342                         u520 0460                         u600 0430  
                       _PEN 048A                         u441 0341                         u521 045F  
                       u601 042F                         u450 037E                         u610 03B0  
                       u451 037D                         u611 03AF                         u515 0450  
                       u460 0331                         u620 03DC                         u540 0474  
                       u700 064E                         u461 0330                         u621 03DB  
                       u541 0473                         u525 045C                         u701 064D  
                       u470 033A                         u630 03E7                         u550 0401  
                       u710 0660                         u471 0339                         u631 03E6  
                       u535 0468                         u551 0400                         u711 065F  
                       u640 03F8                         u800 04D1                         u720 047E  
                       u480 043D                         u641 03F7                         u801 04D0  
                       u721 047D                         u481 043C                         u810 04D6  
                       u730 0489                         u570 0413                         u650 058B  
                       u811 04D5                         u731 0488                         u571 0412  
                       u651 058A                         u740 049A                         u580 041D  
                       u660 05C5                         _SEN 0488                         u741 0499  
                       u581 041C                         u565 0405                         u661 05C4  
                       u670 05EB                         u495 0441                         u671 05EA  
                       u760 04AC                         u680 05F6                         u761 04AB  
                       u585 0419                         u681 05F5                         u690 05FC  
                       u755 049E                         u595 0424                         u691 05FB  
                       u675 05E7                         u780 04BD                         u781 04BC  
                       u837 03CC                         u847 04E6                         u775 04AD  
                       u785 04B9                         u795 04C5             __end_of_I2C_ACK 0332  
                       fsr0 0004                         indf 0000          MPU6050_Read@buffer 0031  
                      l1001 0366                        l1003 0367                        l1005 036A  
                      l1007 036D                        l1201 0413                        l1009 036E  
                      l1203 041D                        l1221 0381                        l1213 0391  
                      l1205 0423                        l1151 035A                        l1223 0386  
                      l1231 03DC                        l1215 0394                        l1311 0483  
                      l1207 042A                        l1225 0320                        l1161 0329  
                      l1233 03E2                        l1153 033C                        l1217 039F  
                      l1321 0494                        l1313 0485                        l1305 0479  
                      l1209 0430                        l1401 0665                        l1227 0325  
                      l1163 0332                        l1235 03E7                        l1155 0342  
                      l1219 03A5                        l1331 04AC                        l1323 049A  
                      l1315 0489                        l1307 047A                        l1171 0440  
                      l1251 0597                        l1243 0580                        l1411 06F0  
                      l1403 067C                        l1149 0354                        l1157 0371  
                      l1237 03ED                        l1229 03D5                        l1333 04BD  
                      l1325 049D                        l1341 04D1                        l1317 048E  
                      l1309 047E                        l1181 0466                        l1173 0447  
                      l1165 0435                        l1261 05C1                        l1245 0585  
                      l1421 0763                        l1413 070D                        l1405 0699  
                      l1159 0376                        l1351 04ED                        l1239 03F9  
                      l1343 04D6                        l1335 04C3                        l1327 04A4  
                      l1319 0492                        l1183 0467                        l1175 044B  
                      l1167 0437                        l1191 03FB                        l1263 05C5  
                      l1255 0598                        l1247 058B                        l1431 07B9  
                      l1423 0777                        l1415 072A                        l1407 06B6  
                      l1361 0509                        l1353 04F2                        l1345 04DB  
                      l1337 04C4                        l1329 04A8                        l1185 046E  
                      l1177 044F                        l1169 043D                        l1193 0401  
                      l1281 05FC                        l1273 05D0                        l1265 05C9  
                      l1257 05B5                        l1249 0592                        l1433 07C9  
                      l1425 0787                        l1417 0747                        l1409 06D3  
                      l1441 03B6                        l1371 0526                        l1363 050F  
                      l1355 04F8                        l1339 04CB                        l1179 0460  
                      l1187 0474                        l1195 0404                        l1291 0641  
                      l1283 0603                        l1267 05CE                        l1259 05BD  
                      l1435 07DF                        l1427 079D                        l1419 074C  
                      l1443 03B9                        l1381 0543                        l1373 052C  
                      l1365 0515                        l1357 04FE                        l1349 04E0  
                      l1197 040B                        l1293 0645                        l1285 0607  
                      l1277 05EC                        l1437 07E5                        l1429 07A3  
                      l1445 03C1                        l1391 0560                        l1383 0549  
                      l1375 0532                        l1367 051B                        l1359 0504  
                      l1199 040F                        l1287 060C                        l1279 05F6  
                      l1295 064E                        l1447 03C6                        l1439 03B1  
                      l1393 0565                        l1385 054E                        l1377 0537  
                      l1369 0520                        l1289 063A                        l1297 0660  
                      l1395 056B                        l1387 0554                        l1379 053D  
                      l1397 0571                        l1389 055A                        l1399 0577  
                      l1487 05AA                        STR_1 0047                        STR_2 0020  
                      STR_3 003A                        STR_4 005E                        STR_5 0013  
                      STR_6 002D                        STR_7 0053                        _BRGH 04C2  
                      _RCEN 048B                        _SPEN 00C7                        _RSEN 0489  
                      _TRMT 04C1                        _TXEN 04C5                        _SYNC 04C4  
          __end_of_I2C_NACK 033B                        _main 03B1            __end_of_I2C_Read 03FB  
                      btemp 007E                        start 0000            ?_I2C_Master_Init 0070  
          ?_I2C_Master_Wait 0070            ?_I2C_Master_Stop 0070                       ?_main 0070  
                     _ACKEN 048C                       _ACKDT 048D             __end_of___awdiv 04E0  
           ___awdiv@divisor 0070             __end_of___lwdiv 0479             __end_of___lwmod 0435  
           ___awdiv@counter 0075                       _SPBRG 0099                       _PORTB 0006  
                     _TRISB 0086                       _SSPIF 0063                       _TXREG 0019  
               ?_UART_Write 0070               ?_MPU6050_Init 0070               ?_MPU6050_Read 0070  
           __end_of_dpowers 0013           __end_of_I2C_Start 0390                       pclath 000A  
                     status 0003                       wtemp0 007E             __end_of_sprintf 0665  
            MPU6050_Read@Ax 0059              MPU6050_Read@Ay 0065              MPU6050_Read@Az 005B  
            MPU6050_Read@Gx 005F              MPU6050_Read@Gy 0061              MPU6050_Read@Gz 0063  
           __initialization 07FC                __end_of_main 03D4                   ??_I2C_ACK 0070  
                    ??_main 0067           ?_I2C_Master_Write 0070              ??_MPU6050_Init 0072  
            ??_MPU6050_Read 002D          ??_I2C_Master_Write 0070            ___awdiv@dividend 0072  
                    _ANSELH 0189                      _SSPADD 0093                      _TRISC3 043B  
                    _TRISC4 043C                      _TRISC6 043E                      _TRISC7 043F  
                    _SSPCON 0014                      _SSPBUF 0013            I2C_Read@ACK_NACK 0071  
       __size_of_UART_Write 000C                   ??___awdiv 0074                   ??___lwdiv 0074  
                 ??___lwmod 007C            ___awdiv@quotient 0077                   ?_I2C_NACK 0070  
                 ?_I2C_Read 0070                   ??_sprintf 0023     __end_of__initialization 07FC  
            __pcstackCOMMON 0070                  ??_I2C_NACK 0070                  ??_I2C_Read 0070  
              I2C_Read@Data 0072                  __pmaintext 03B1        __end_of_MPU6050_Init 057D  
      __end_of_MPU6050_Read 07FC                     _I2C_ACK 0329                     _ACKSTAT 048E  
              ??_UART_Write 0070                     _SSPCON2 0091                     _SSPSTAT 0094  
             ?_UART_TX_Init 0070                  __stringtab 0003                I2C_Start@add 0071  
                 _I2C_Start 0380                     ___awdiv 0479          __end_of_UART_Write 0347  
                   ___lwdiv 0435                     ___lwmod 03FB                     __ptext1 0361  
                   __ptext2 0665                     __ptext3 057D                     __ptext4 03FB  
                   __ptext5 0435                     __ptext6 0479                     __ptext7 0390  
                   __ptext8 033B                     __ptext9 03D4                     _dpowers 0009  
  __size_of_I2C_Master_Init 000D    __size_of_I2C_Master_Wait 000D    __size_of_I2C_Master_Stop 0009  
            ??_UART_TX_Init 0070                     _sprintf 057D        end_of_initialization 07FC  
                ?_I2C_Start 0070   __size_of_I2C_Master_Write 0010              UART_Write@data 0070  
         __size_of_I2C_NACK 0009           __size_of_I2C_Read 0027       __size_of_MPU6050_Init 009D  
     __size_of_MPU6050_Read 0197         start_initialization 07FC               MPU6050_Read@T 005D  
              _MPU6050_Init 04E0                _MPU6050_Read 0665           ??_I2C_Master_Init 0070  
         ??_I2C_Master_Wait 0070           ??_I2C_Master_Stop 0070                 ??_I2C_Start 0071  
      __end_of_UART_TX_Init 0370                    ?_I2C_ACK 0070                   ___latbits 0002  
             __pcstackBANK0 0020                 sprintf@flag 0027                 sprintf@prec 0028  
          _I2C_Master_Write 0370            ___lwdiv@dividend 0072                    ?___awdiv 0070  
                  ?___lwdiv 0070                    ?___lwmod 0078        I2C_Master_Write@data 0070  
                 __pstrings 0003                    _I2C_NACK 0332                    _I2C_Read 03D4  
          ___lwdiv@quotient 0075                    ?_sprintf 0020            __size_of_I2C_ACK 0009  
      UART_Write_String@buf 0074                 __stringbase 0008       __size_of_UART_TX_Init 000F  
          __size_of___awdiv 0067            __size_of___lwdiv 0044            __size_of___lwmod 003A  
        __end_of__stringtab 0009           _UART_Write_String 0390                  sprintf@val 0029  
           _I2C_Master_Init 0347             _I2C_Master_Wait 0354             _I2C_Master_Stop 0320  
        ?_UART_Write_String 0070             ___lwdiv@divisor 0070             ___lwdiv@counter 0077  
                  __ptext10 0332                    __ptext11 0329                    __ptext12 04E0  
                  __ptext13 0380                    __ptext14 0370                    __ptext15 0320  
                  __ptext16 0354                    __ptext17 0347            __size_of_sprintf 00E8  
              _UART_TX_Init 0361         ??_UART_Write_String 0071               __size_of_main 0023  
 __end_of_UART_Write_String 03B1    __end_of_I2C_Master_Write 0380                   sprintf@ap 0026  
                 sprintf@sp 002B            ___lwmod@dividend 007A                   stringcode 0003  
        UART_Write_String@i 0072     __end_of_I2C_Master_Init 0354     __end_of_I2C_Master_Wait 0361  
   __end_of_I2C_Master_Stop 0329                    sprintf@c 002C                    sprintf@f 0020  
           ___lwmod@divisor 0078             ___lwmod@counter 007D                    stringdir 0003  
                  stringtab 0003                  _UART_Write 033B  
